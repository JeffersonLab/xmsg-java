// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xMsgData.proto
package org.jlab.coda.xmsg.data;

public final class xMsgD {
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgPayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgPayload_Item_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgPayload_Item_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016xMsgData.proto\"\236\002\n\010xMsgData\022\020\n\010VLSINT3" +
      "2\030\001 \001(\021\022\020\n\010VLSINT64\030\002 \001(\022\022\020\n\010FLSINT32\030\003 " +
      "\001(\017\022\020\n\010FLSINT64\030\004 \001(\020\022\r\n\005FLOAT\030\005 \001(\002\022\016\n\006" +
      "DOUBLE\030\006 \001(\001\022\016\n\006STRING\030\007 \001(\t\022\r\n\005BYTES\030\010 " +
      "\001(\014\022\021\n\tVLSINT32A\030\t \003(\021\022\021\n\tVLSINT64A\030\n \003(" +
      "\022\022\021\n\tFLSINT32A\030\013 \003(\017\022\021\n\tFLSINT64A\030\014 \003(\020\022" +
      "\016\n\006FLOATA\030\r \003(\002\022\017\n\007DOUBLEA\030\016 \003(\001\022\017\n\007STRI" +
      "NGA\030\017 \003(\t\022\016\n\006BYTESA\030\020 \003(\014\"]\n\013xMsgPayload" +
      "\022\037\n\004item\030\001 \003(\0132\021.xMsgPayload.Item\032-\n\004Ite" +
      "m\022\014\n\004name\030\001 \002(\t\022\027\n\004data\030\002 \002(\0132\t.xMsgData",
      "B\tB\005xMsgDH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_xMsgData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_xMsgData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgData_descriptor,
              new java.lang.String[] { "VLSINT32", "VLSINT64", "FLSINT32", "FLSINT64", "FLOAT", "DOUBLE", "STRING", "BYTES", "VLSINT32A", "VLSINT64A", "FLSINT32A", "FLSINT64A", "FLOATA", "DOUBLEA", "STRINGA", "BYTESA", });
          internal_static_xMsgPayload_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_xMsgPayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgPayload_descriptor,
              new java.lang.String[] { "Item", });
          internal_static_xMsgPayload_Item_descriptor =
            internal_static_xMsgPayload_descriptor.getNestedTypes().get(0);
          internal_static_xMsgPayload_Item_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgPayload_Item_descriptor,
              new java.lang.String[] { "Name", "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  private xMsgD() {}

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  public interface xMsgDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint32 VLSINT32 = 1;
    /**
     * <code>optional sint32 VLSINT32 = 1;</code>
     *
     * <pre>
     * variable length signed int32
     * </pre>
     */
    boolean hasVLSINT32();
    /**
     * <code>optional sint32 VLSINT32 = 1;</code>
     *
     * <pre>
     * variable length signed int32
     * </pre>
     */
    int getVLSINT32();

    // optional sint64 VLSINT64 = 2;
    /**
     * <code>optional sint64 VLSINT64 = 2;</code>
     *
     * <pre>
     * variable length signed int64
     * </pre>
     */
    boolean hasVLSINT64();
    /**
     * <code>optional sint64 VLSINT64 = 2;</code>
     *
     * <pre>
     * variable length signed int64
     * </pre>
     */
    long getVLSINT64();

    // optional sfixed32 FLSINT32 = 3;
    /**
     * <code>optional sfixed32 FLSINT32 = 3;</code>
     *
     * <pre>
     * fixed length signed int32
     * </pre>
     */
    boolean hasFLSINT32();
    /**
     * <code>optional sfixed32 FLSINT32 = 3;</code>
     *
     * <pre>
     * fixed length signed int32
     * </pre>
     */
    int getFLSINT32();

    // optional sfixed64 FLSINT64 = 4;
    /**
     * <code>optional sfixed64 FLSINT64 = 4;</code>
     *
     * <pre>
     * fixed length signed int64
     * </pre>
     */
    boolean hasFLSINT64();
    /**
     * <code>optional sfixed64 FLSINT64 = 4;</code>
     *
     * <pre>
     * fixed length signed int64
     * </pre>
     */
    long getFLSINT64();

    // optional float FLOAT = 5;
    /**
     * <code>optional float FLOAT = 5;</code>
     */
    boolean hasFLOAT();
    /**
     * <code>optional float FLOAT = 5;</code>
     */
    float getFLOAT();

    // optional double DOUBLE = 6;
    /**
     * <code>optional double DOUBLE = 6;</code>
     */
    boolean hasDOUBLE();
    /**
     * <code>optional double DOUBLE = 6;</code>
     */
    double getDOUBLE();

    // optional string STRING = 7;
    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    boolean hasSTRING();
    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    java.lang.String getSTRING();
    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    com.google.protobuf.ByteString
        getSTRINGBytes();

    // optional bytes BYTES = 8;
    /**
     * <code>optional bytes BYTES = 8;</code>
     *
     * <pre>
     * contains arbitrary sequence of bytes
     * </pre>
     */
    boolean hasBYTES();
    /**
     * <code>optional bytes BYTES = 8;</code>
     *
     * <pre>
     * contains arbitrary sequence of bytes
     * </pre>
     */
    com.google.protobuf.ByteString getBYTES();

    // repeated sint32 VLSINT32A = 9;
    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    java.util.List<java.lang.Integer> getVLSINT32AList();
    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    int getVLSINT32ACount();
    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    int getVLSINT32A(int index);

    // repeated sint64 VLSINT64A = 10;
    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    java.util.List<java.lang.Long> getVLSINT64AList();
    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    int getVLSINT64ACount();
    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    long getVLSINT64A(int index);

    // repeated sfixed32 FLSINT32A = 11;
    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    java.util.List<java.lang.Integer> getFLSINT32AList();
    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    int getFLSINT32ACount();
    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    int getFLSINT32A(int index);

    // repeated sfixed64 FLSINT64A = 12;
    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    java.util.List<java.lang.Long> getFLSINT64AList();
    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    int getFLSINT64ACount();
    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    long getFLSINT64A(int index);

    // repeated float FLOATA = 13;
    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    java.util.List<java.lang.Float> getFLOATAList();
    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    int getFLOATACount();
    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    float getFLOATA(int index);

    // repeated double DOUBLEA = 14;
    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    java.util.List<java.lang.Double> getDOUBLEAList();
    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    int getDOUBLEACount();
    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    double getDOUBLEA(int index);

    // repeated string STRINGA = 15;
    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    java.util.List<java.lang.String>
    getSTRINGAList();
    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    int getSTRINGACount();
    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    java.lang.String getSTRINGA(int index);
    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    com.google.protobuf.ByteString
        getSTRINGABytes(int index);

    // repeated bytes BYTESA = 16;
    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getBYTESAList();
    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    int getBYTESACount();
    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    com.google.protobuf.ByteString getBYTESA(int index);
  }

  public interface xMsgPayloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .xMsgPayload.Item item = 1;
    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    java.util.List<xMsgD.xMsgPayload.Item>
        getItemList();
    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    xMsgD.xMsgPayload.Item getItem(int index);
    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    int getItemCount();
    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    java.util.List<? extends xMsgD.xMsgPayload.ItemOrBuilder>
        getItemOrBuilderList();
    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    xMsgD.xMsgPayload.ItemOrBuilder getItemOrBuilder(
        int index);
  }

  /**
   * Protobuf type {@code xMsgData}
   *
   * <pre>
   * ... Data class ...
   * </pre>
   */
  public static final class xMsgData extends
      com.google.protobuf.GeneratedMessage
      implements xMsgDataOrBuilder {
    // optional sint32 VLSINT32 = 1;
    public static final int VLSINT32_FIELD_NUMBER = 1;
    // optional sint64 VLSINT64 = 2;
    public static final int VLSINT64_FIELD_NUMBER = 2;
    // optional sfixed32 FLSINT32 = 3;
    public static final int FLSINT32_FIELD_NUMBER = 3;
    // optional sfixed64 FLSINT64 = 4;
    public static final int FLSINT64_FIELD_NUMBER = 4;
    // optional float FLOAT = 5;
    public static final int FLOAT_FIELD_NUMBER = 5;
    // optional double DOUBLE = 6;
    public static final int DOUBLE_FIELD_NUMBER = 6;
    // optional string STRING = 7;
    public static final int STRING_FIELD_NUMBER = 7;
    // optional bytes BYTES = 8;
    public static final int BYTES_FIELD_NUMBER = 8;
    // repeated sint32 VLSINT32A = 9;
    public static final int VLSINT32A_FIELD_NUMBER = 9;
    // repeated sint64 VLSINT64A = 10;
    public static final int VLSINT64A_FIELD_NUMBER = 10;
    // repeated sfixed32 FLSINT32A = 11;
    public static final int FLSINT32A_FIELD_NUMBER = 11;
    // repeated sfixed64 FLSINT64A = 12;
    public static final int FLSINT64A_FIELD_NUMBER = 12;
    // repeated float FLOATA = 13;
    public static final int FLOATA_FIELD_NUMBER = 13;
    // repeated double DOUBLEA = 14;
    public static final int DOUBLEA_FIELD_NUMBER = 14;
    // repeated string STRINGA = 15;
    public static final int STRINGA_FIELD_NUMBER = 15;
    // repeated bytes BYTESA = 16;
    public static final int BYTESA_FIELD_NUMBER = 16;
    private static final xMsgData defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<xMsgData> PARSER =
        new com.google.protobuf.AbstractParser<xMsgData>() {
      public xMsgData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new xMsgData(input, extensionRegistry);
      }
    };
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private int bitField0_;
    private int vLSINT32_;
    private long vLSINT64_;
    private int fLSINT32_;
    private long fLSINT64_;
    private float fLOAT_;
    private double dOUBLE_;
    private java.lang.Object sTRING_;
    private com.google.protobuf.ByteString bYTES_;
    private java.util.List<java.lang.Integer> vLSINT32A_;
    private java.util.List<java.lang.Long> vLSINT64A_;
    private java.util.List<java.lang.Integer> fLSINT32A_;
    private java.util.List<java.lang.Long> fLSINT64A_;
    private java.util.List<java.lang.Float> fLOATA_;
    private java.util.List<java.lang.Double> dOUBLEA_;
    private com.google.protobuf.LazyStringList sTRINGA_;
    private java.util.List<com.google.protobuf.ByteString> bYTESA_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use xMsgData.newBuilder() to construct.
    private xMsgData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private xMsgData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
    private xMsgData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              vLSINT32_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vLSINT64_ = input.readSInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              fLSINT32_ = input.readSFixed32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              fLSINT64_ = input.readSFixed64();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              fLOAT_ = input.readFloat();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              dOUBLE_ = input.readDouble();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              sTRING_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              bYTES_ = input.readBytes();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              vLSINT32A_.add(input.readSInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                vLSINT32A_.add(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                vLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              vLSINT64A_.add(input.readSInt64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                vLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                vLSINT64A_.add(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              fLSINT32A_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                fLSINT32A_.add(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                fLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              fLSINT64A_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                fLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                fLSINT64A_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 109: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                fLOATA_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00001000;
              }
              fLOATA_.add(input.readFloat());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                fLOATA_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fLOATA_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 113: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                dOUBLEA_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00002000;
              }
              dOUBLEA_.add(input.readDouble());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                dOUBLEA_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dOUBLEA_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                sTRINGA_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00004000;
              }
              sTRINGA_.add(input.readBytes());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                bYTESA_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00008000;
              }
              bYTESA_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          vLSINT32A_ = java.util.Collections.unmodifiableList(vLSINT32A_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          vLSINT64A_ = java.util.Collections.unmodifiableList(vLSINT64A_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          fLSINT32A_ = java.util.Collections.unmodifiableList(fLSINT32A_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          fLSINT64A_ = java.util.Collections.unmodifiableList(fLSINT64A_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          fLOATA_ = java.util.Collections.unmodifiableList(fLOATA_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          dOUBLEA_ = java.util.Collections.unmodifiableList(dOUBLEA_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          sTRINGA_ = new com.google.protobuf.UnmodifiableLazyStringList(sTRINGA_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          bYTESA_ = java.util.Collections.unmodifiableList(bYTESA_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static xMsgData getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xMsgD.internal_static_xMsgData_descriptor;
    }

    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static xMsgD.xMsgData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static xMsgD.xMsgData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static xMsgD.xMsgData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static xMsgD.xMsgData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static xMsgD.xMsgData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static xMsgD.xMsgData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(xMsgD.xMsgData prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public xMsgData getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xMsgD.internal_static_xMsgData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xMsgD.xMsgData.class, xMsgD.xMsgData.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<xMsgData> getParserForType() {
      return PARSER;
    }

    /**
     * <code>optional sint32 VLSINT32 = 1;</code>
     *
     * <pre>
     * variable length signed int32
     * </pre>
     */
    public boolean hasVLSINT32() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <code>optional sint32 VLSINT32 = 1;</code>
     *
     * <pre>
     * variable length signed int32
     * </pre>
     */
    public int getVLSINT32() {
      return vLSINT32_;
    }

    /**
     * <code>optional sint64 VLSINT64 = 2;</code>
     *
     * <pre>
     * variable length signed int64
     * </pre>
     */
    public boolean hasVLSINT64() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <code>optional sint64 VLSINT64 = 2;</code>
     *
     * <pre>
     * variable length signed int64
     * </pre>
     */
    public long getVLSINT64() {
      return vLSINT64_;
    }

    /**
     * <code>optional sfixed32 FLSINT32 = 3;</code>
     *
     * <pre>
     * fixed length signed int32
     * </pre>
     */
    public boolean hasFLSINT32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional sfixed32 FLSINT32 = 3;</code>
     *
     * <pre>
     * fixed length signed int32
     * </pre>
     */
    public int getFLSINT32() {
      return fLSINT32_;
    }

    /**
     * <code>optional sfixed64 FLSINT64 = 4;</code>
     *
     * <pre>
     * fixed length signed int64
     * </pre>
     */
    public boolean hasFLSINT64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional sfixed64 FLSINT64 = 4;</code>
     *
     * <pre>
     * fixed length signed int64
     * </pre>
     */
    public long getFLSINT64() {
      return fLSINT64_;
    }

    /**
     * <code>optional float FLOAT = 5;</code>
     */
    public boolean hasFLOAT() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    /**
     * <code>optional float FLOAT = 5;</code>
     */
    public float getFLOAT() {
      return fLOAT_;
    }

    /**
     * <code>optional double DOUBLE = 6;</code>
     */
    public boolean hasDOUBLE() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    /**
     * <code>optional double DOUBLE = 6;</code>
     */
    public double getDOUBLE() {
      return dOUBLE_;
    }

    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    public boolean hasSTRING() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    public java.lang.String getSTRING() {
      java.lang.Object ref = sTRING_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sTRING_ = s;
        }
        return s;
      }
    }

    /**
     * <code>optional string STRING = 7;</code>
     *
     * <pre>
     * contains UTF-8 encoding or 7-bit ASCII text
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSTRINGBytes() {
      java.lang.Object ref = sTRING_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sTRING_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <code>optional bytes BYTES = 8;</code>
     *
     * <pre>
     * contains arbitrary sequence of bytes
     * </pre>
     */
    public boolean hasBYTES() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    /**
     * <code>optional bytes BYTES = 8;</code>
     *
     * <pre>
     * contains arbitrary sequence of bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getBYTES() {
      return bYTES_;
    }

    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getVLSINT32AList() {
      return vLSINT32A_;
    }

    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    public int getVLSINT32ACount() {
      return vLSINT32A_.size();
    }

    /**
     * <code>repeated sint32 VLSINT32A = 9;</code>
     *
     * <pre>
     * array of variable length signed int32s
     * </pre>
     */
    public int getVLSINT32A(int index) {
      return vLSINT32A_.get(index);
    }

    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getVLSINT64AList() {
      return vLSINT64A_;
    }

    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    public int getVLSINT64ACount() {
      return vLSINT64A_.size();
    }

    /**
     * <code>repeated sint64 VLSINT64A = 10;</code>
     *
     * <pre>
     * array of variable length signed int64s
     * </pre>
     */
    public long getVLSINT64A(int index) {
      return vLSINT64A_.get(index);
    }

    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFLSINT32AList() {
      return fLSINT32A_;
    }

    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    public int getFLSINT32ACount() {
      return fLSINT32A_.size();
    }

    /**
     * <code>repeated sfixed32 FLSINT32A = 11;</code>
     *
     * <pre>
     * array of fixed length signed int32s
     * </pre>
     */
    public int getFLSINT32A(int index) {
      return fLSINT32A_.get(index);
    }

    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFLSINT64AList() {
      return fLSINT64A_;
    }

    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    public int getFLSINT64ACount() {
      return fLSINT64A_.size();
    }

    /**
     * <code>repeated sfixed64 FLSINT64A = 12;</code>
     *
     * <pre>
     * array of fixed length signed int64s
     * </pre>
     */
    public long getFLSINT64A(int index) {
      return fLSINT64A_.get(index);
    }

    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getFLOATAList() {
      return fLOATA_;
    }

    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    public int getFLOATACount() {
      return fLOATA_.size();
    }

    /**
     * <code>repeated float FLOATA = 13;</code>
     *
     * <pre>
     * array of floats
     * </pre>
     */
    public float getFLOATA(int index) {
      return fLOATA_.get(index);
    }

    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    public java.util.List<java.lang.Double>
        getDOUBLEAList() {
      return dOUBLEA_;
    }

    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    public int getDOUBLEACount() {
      return dOUBLEA_.size();
    }

    /**
     * <code>repeated double DOUBLEA = 14;</code>
     *
     * <pre>
     * array of doubles
     * </pre>
     */
    public double getDOUBLEA(int index) {
      return dOUBLEA_.get(index);
    }

    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    public java.util.List<java.lang.String>
        getSTRINGAList() {
      return sTRINGA_;
    }

    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    public int getSTRINGACount() {
      return sTRINGA_.size();
    }

    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    public java.lang.String getSTRINGA(int index) {
      return sTRINGA_.get(index);
    }

    /**
     * <code>repeated string STRINGA = 15;</code>
     *
     * <pre>
     * array of UTF-8 encoded or 7-bit ASCII strings
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSTRINGABytes(int index) {
      return sTRINGA_.getByteString(index);
    }

    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBYTESAList() {
      return bYTESA_;
    }

    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    public int getBYTESACount() {
      return bYTESA_.size();
    }

    /**
     * <code>repeated bytes BYTESA = 16;</code>
     *
     * <pre>
     * array of arbitrary sequence of bytes
     * </pre>
     */
    public com.google.protobuf.ByteString getBYTESA(int index) {
      return bYTESA_.get(index);
    }

    private void initFields() {
      vLSINT32_ = 0;
      vLSINT64_ = 0L;
      fLSINT32_ = 0;
      fLSINT64_ = 0L;
      fLOAT_ = 0F;
      dOUBLE_ = 0D;
      sTRING_ = "";
      bYTES_ = com.google.protobuf.ByteString.EMPTY;
      vLSINT32A_ = java.util.Collections.emptyList();
      vLSINT64A_ = java.util.Collections.emptyList();
      fLSINT32A_ = java.util.Collections.emptyList();
      fLSINT64A_ = java.util.Collections.emptyList();
      fLOATA_ = java.util.Collections.emptyList();
      dOUBLEA_ = java.util.Collections.emptyList();
      sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bYTESA_ = java.util.Collections.emptyList();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, vLSINT32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt64(2, vLSINT64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSFixed32(3, fLSINT32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed64(4, fLSINT64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, fLOAT_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, dOUBLE_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getSTRINGBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, bYTES_);
      }
      for (int i = 0; i < vLSINT32A_.size(); i++) {
        output.writeSInt32(9, vLSINT32A_.get(i));
      }
      for (int i = 0; i < vLSINT64A_.size(); i++) {
        output.writeSInt64(10, vLSINT64A_.get(i));
      }
      for (int i = 0; i < fLSINT32A_.size(); i++) {
        output.writeSFixed32(11, fLSINT32A_.get(i));
      }
      for (int i = 0; i < fLSINT64A_.size(); i++) {
        output.writeSFixed64(12, fLSINT64A_.get(i));
      }
      for (int i = 0; i < fLOATA_.size(); i++) {
        output.writeFloat(13, fLOATA_.get(i));
      }
      for (int i = 0; i < dOUBLEA_.size(); i++) {
        output.writeDouble(14, dOUBLEA_.get(i));
      }
      for (int i = 0; i < sTRINGA_.size(); i++) {
        output.writeBytes(15, sTRINGA_.getByteString(i));
      }
      for (int i = 0; i < bYTESA_.size(); i++) {
        output.writeBytes(16, bYTESA_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, vLSINT32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(2, vLSINT64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, fLSINT32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(4, fLSINT64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, fLOAT_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, dOUBLE_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getSTRINGBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, bYTES_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vLSINT32A_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(vLSINT32A_.get(i));
        }
        size += dataSize;
        size += 1 * getVLSINT32AList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < vLSINT64A_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(vLSINT64A_.get(i));
        }
        size += dataSize;
        size += 1 * getVLSINT64AList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFLSINT32AList().size();
        size += dataSize;
        size += 1 * getFLSINT32AList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFLSINT64AList().size();
        size += dataSize;
        size += 1 * getFLSINT64AList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFLOATAList().size();
        size += dataSize;
        size += 1 * getFLOATAList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDOUBLEAList().size();
        size += dataSize;
        size += 1 * getDOUBLEAList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sTRINGA_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(sTRINGA_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSTRINGAList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bYTESA_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bYTESA_.get(i));
        }
        size += dataSize;
        size += 2 * getBYTESAList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xMsgData}
     *
     * <pre>
     * ... Data class ...
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements xMsgD.xMsgDataOrBuilder {
      private int bitField0_;
      // optional sint32 VLSINT32 = 1;
      private int vLSINT32_ ;
      // optional sint64 VLSINT64 = 2;
      private long vLSINT64_ ;
      // optional sfixed32 FLSINT32 = 3;
      private int fLSINT32_ ;
      // optional sfixed64 FLSINT64 = 4;
      private long fLSINT64_ ;
      // optional float FLOAT = 5;
      private float fLOAT_ ;
      // optional double DOUBLE = 6;
      private double dOUBLE_ ;
      // optional string STRING = 7;
      private java.lang.Object sTRING_ = "";
      // optional bytes BYTES = 8;
      private com.google.protobuf.ByteString bYTES_ = com.google.protobuf.ByteString.EMPTY;
      // repeated sint32 VLSINT32A = 9;
      private java.util.List<java.lang.Integer> vLSINT32A_ = java.util.Collections.emptyList();
      // repeated sint64 VLSINT64A = 10;
      private java.util.List<java.lang.Long> vLSINT64A_ = java.util.Collections.emptyList();
      // repeated sfixed32 FLSINT32A = 11;
      private java.util.List<java.lang.Integer> fLSINT32A_ = java.util.Collections.emptyList();
      // repeated sfixed64 FLSINT64A = 12;
      private java.util.List<java.lang.Long> fLSINT64A_ = java.util.Collections.emptyList();
      // repeated float FLOATA = 13;
      private java.util.List<java.lang.Float> fLOATA_ = java.util.Collections.emptyList();
      // repeated double DOUBLEA = 14;
      private java.util.List<java.lang.Double> dOUBLEA_ = java.util.Collections.emptyList();
      // repeated string STRINGA = 15;
      private com.google.protobuf.LazyStringList sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      // repeated bytes BYTESA = 16;
      private java.util.List<com.google.protobuf.ByteString> bYTESA_ = java.util.Collections.emptyList();

      // Construct using xMsgD.xMsgData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgData_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgData.class, xMsgD.xMsgData.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        vLSINT32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vLSINT64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fLSINT32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fLSINT64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        fLOAT_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        dOUBLE_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        sTRING_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        bYTES_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        vLSINT32A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        vLSINT64A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        fLSINT32A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        fLSINT64A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        fLOATA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        dOUBLEA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        bYTESA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xMsgD.internal_static_xMsgData_descriptor;
      }

      public xMsgD.xMsgData getDefaultInstanceForType() {
        return xMsgD.xMsgData.getDefaultInstance();
      }

      public xMsgD.xMsgData build() {
        xMsgD.xMsgData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xMsgD.xMsgData buildPartial() {
        xMsgD.xMsgData result = new xMsgD.xMsgData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vLSINT32_ = vLSINT32_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vLSINT64_ = vLSINT64_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fLSINT32_ = fLSINT32_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fLSINT64_ = fLSINT64_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fLOAT_ = fLOAT_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dOUBLE_ = dOUBLE_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sTRING_ = sTRING_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.bYTES_ = bYTES_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          vLSINT32A_ = java.util.Collections.unmodifiableList(vLSINT32A_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.vLSINT32A_ = vLSINT32A_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          vLSINT64A_ = java.util.Collections.unmodifiableList(vLSINT64A_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.vLSINT64A_ = vLSINT64A_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          fLSINT32A_ = java.util.Collections.unmodifiableList(fLSINT32A_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.fLSINT32A_ = fLSINT32A_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          fLSINT64A_ = java.util.Collections.unmodifiableList(fLSINT64A_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.fLSINT64A_ = fLSINT64A_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          fLOATA_ = java.util.Collections.unmodifiableList(fLOATA_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.fLOATA_ = fLOATA_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          dOUBLEA_ = java.util.Collections.unmodifiableList(dOUBLEA_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.dOUBLEA_ = dOUBLEA_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          sTRINGA_ = new com.google.protobuf.UnmodifiableLazyStringList(
              sTRINGA_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.sTRINGA_ = sTRINGA_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          bYTESA_ = java.util.Collections.unmodifiableList(bYTESA_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.bYTESA_ = bYTESA_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xMsgD.xMsgData) {
          return mergeFrom((xMsgD.xMsgData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xMsgD.xMsgData other) {
        if (other == xMsgD.xMsgData.getDefaultInstance()) return this;
        if (other.hasVLSINT32()) {
          setVLSINT32(other.getVLSINT32());
        }
        if (other.hasVLSINT64()) {
          setVLSINT64(other.getVLSINT64());
        }
        if (other.hasFLSINT32()) {
          setFLSINT32(other.getFLSINT32());
        }
        if (other.hasFLSINT64()) {
          setFLSINT64(other.getFLSINT64());
        }
        if (other.hasFLOAT()) {
          setFLOAT(other.getFLOAT());
        }
        if (other.hasDOUBLE()) {
          setDOUBLE(other.getDOUBLE());
        }
        if (other.hasSTRING()) {
          bitField0_ |= 0x00000040;
          sTRING_ = other.sTRING_;
          onChanged();
        }
        if (other.hasBYTES()) {
          setBYTES(other.getBYTES());
        }
        if (!other.vLSINT32A_.isEmpty()) {
          if (vLSINT32A_.isEmpty()) {
            vLSINT32A_ = other.vLSINT32A_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureVLSINT32AIsMutable();
            vLSINT32A_.addAll(other.vLSINT32A_);
          }
          onChanged();
        }
        if (!other.vLSINT64A_.isEmpty()) {
          if (vLSINT64A_.isEmpty()) {
            vLSINT64A_ = other.vLSINT64A_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureVLSINT64AIsMutable();
            vLSINT64A_.addAll(other.vLSINT64A_);
          }
          onChanged();
        }
        if (!other.fLSINT32A_.isEmpty()) {
          if (fLSINT32A_.isEmpty()) {
            fLSINT32A_ = other.fLSINT32A_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureFLSINT32AIsMutable();
            fLSINT32A_.addAll(other.fLSINT32A_);
          }
          onChanged();
        }
        if (!other.fLSINT64A_.isEmpty()) {
          if (fLSINT64A_.isEmpty()) {
            fLSINT64A_ = other.fLSINT64A_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureFLSINT64AIsMutable();
            fLSINT64A_.addAll(other.fLSINT64A_);
          }
          onChanged();
        }
        if (!other.fLOATA_.isEmpty()) {
          if (fLOATA_.isEmpty()) {
            fLOATA_ = other.fLOATA_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureFLOATAIsMutable();
            fLOATA_.addAll(other.fLOATA_);
          }
          onChanged();
        }
        if (!other.dOUBLEA_.isEmpty()) {
          if (dOUBLEA_.isEmpty()) {
            dOUBLEA_ = other.dOUBLEA_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDOUBLEAIsMutable();
            dOUBLEA_.addAll(other.dOUBLEA_);
          }
          onChanged();
        }
        if (!other.sTRINGA_.isEmpty()) {
          if (sTRINGA_.isEmpty()) {
            sTRINGA_ = other.sTRINGA_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureSTRINGAIsMutable();
            sTRINGA_.addAll(other.sTRINGA_);
          }
          onChanged();
        }
        if (!other.bYTESA_.isEmpty()) {
          if (bYTESA_.isEmpty()) {
            bYTESA_ = other.bYTESA_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureBYTESAIsMutable();
            bYTESA_.addAll(other.bYTESA_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xMsgD.xMsgData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xMsgD.xMsgData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public boolean hasVLSINT32() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public int getVLSINT32() {
        return vLSINT32_;
      }

      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public Builder setVLSINT32(int value) {
        bitField0_ |= 0x00000001;
        vLSINT32_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public Builder clearVLSINT32() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vLSINT32_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public boolean hasVLSINT64() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public long getVLSINT64() {
        return vLSINT64_;
      }

      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public Builder setVLSINT64(long value) {
        bitField0_ |= 0x00000002;
        vLSINT64_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public Builder clearVLSINT64() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vLSINT64_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public boolean hasFLSINT32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }

      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public int getFLSINT32() {
        return fLSINT32_;
      }

      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public Builder setFLSINT32(int value) {
        bitField0_ |= 0x00000004;
        fLSINT32_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public Builder clearFLSINT32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fLSINT32_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public boolean hasFLSINT64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }

      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public long getFLSINT64() {
        return fLSINT64_;
      }

      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public Builder setFLSINT64(long value) {
        bitField0_ |= 0x00000008;
        fLSINT64_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public Builder clearFLSINT64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fLSINT64_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public boolean hasFLOAT() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }

      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public float getFLOAT() {
        return fLOAT_;
      }

      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public Builder setFLOAT(float value) {
        bitField0_ |= 0x00000010;
        fLOAT_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public Builder clearFLOAT() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fLOAT_ = 0F;
        onChanged();
        return this;
      }

      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public boolean hasDOUBLE() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }

      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public double getDOUBLE() {
        return dOUBLE_;
      }

      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public Builder setDOUBLE(double value) {
        bitField0_ |= 0x00000020;
        dOUBLE_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public Builder clearDOUBLE() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dOUBLE_ = 0D;
        onChanged();
        return this;
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public boolean hasSTRING() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public java.lang.String getSTRING() {
        java.lang.Object ref = sTRING_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sTRING_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public Builder setSTRING(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        sTRING_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSTRINGBytes() {
        java.lang.Object ref = sTRING_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sTRING_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public Builder setSTRINGBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        sTRING_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public Builder clearSTRING() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sTRING_ = getDefaultInstance().getSTRING();
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public boolean hasBYTES() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }

      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getBYTES() {
        return bYTES_;
      }

      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public Builder setBYTES(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        bYTES_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public Builder clearBYTES() {
        bitField0_ = (bitField0_ & ~0x00000080);
        bYTES_ = getDefaultInstance().getBYTES();
        onChanged();
        return this;
      }

      private void ensureVLSINT32AIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>(vLSINT32A_);
          bitField0_ |= 0x00000100;
         }
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getVLSINT32AList() {
        return java.util.Collections.unmodifiableList(vLSINT32A_);
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public int getVLSINT32ACount() {
        return vLSINT32A_.size();
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public int getVLSINT32A(int index) {
        return vLSINT32A_.get(index);
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public Builder setVLSINT32A(
          int index, int value) {
        ensureVLSINT32AIsMutable();
        vLSINT32A_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public Builder addVLSINT32A(int value) {
        ensureVLSINT32AIsMutable();
        vLSINT32A_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public Builder addAllVLSINT32A(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVLSINT32AIsMutable();
        addAll(values, vLSINT32A_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public Builder clearVLSINT32A() {
        vLSINT32A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private void ensureVLSINT64AIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          vLSINT64A_ = new java.util.ArrayList<java.lang.Long>(vLSINT64A_);
          bitField0_ |= 0x00000200;
         }
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getVLSINT64AList() {
        return java.util.Collections.unmodifiableList(vLSINT64A_);
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public int getVLSINT64ACount() {
        return vLSINT64A_.size();
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public long getVLSINT64A(int index) {
        return vLSINT64A_.get(index);
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public Builder setVLSINT64A(
          int index, long value) {
        ensureVLSINT64AIsMutable();
        vLSINT64A_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public Builder addVLSINT64A(long value) {
        ensureVLSINT64AIsMutable();
        vLSINT64A_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public Builder addAllVLSINT64A(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureVLSINT64AIsMutable();
        addAll(values, vLSINT64A_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public Builder clearVLSINT64A() {
        vLSINT64A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private void ensureFLSINT32AIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>(fLSINT32A_);
          bitField0_ |= 0x00000400;
         }
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFLSINT32AList() {
        return java.util.Collections.unmodifiableList(fLSINT32A_);
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public int getFLSINT32ACount() {
        return fLSINT32A_.size();
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public int getFLSINT32A(int index) {
        return fLSINT32A_.get(index);
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public Builder setFLSINT32A(
          int index, int value) {
        ensureFLSINT32AIsMutable();
        fLSINT32A_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public Builder addFLSINT32A(int value) {
        ensureFLSINT32AIsMutable();
        fLSINT32A_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public Builder addAllFLSINT32A(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFLSINT32AIsMutable();
        addAll(values, fLSINT32A_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public Builder clearFLSINT32A() {
        fLSINT32A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private void ensureFLSINT64AIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          fLSINT64A_ = new java.util.ArrayList<java.lang.Long>(fLSINT64A_);
          bitField0_ |= 0x00000800;
         }
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFLSINT64AList() {
        return java.util.Collections.unmodifiableList(fLSINT64A_);
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public int getFLSINT64ACount() {
        return fLSINT64A_.size();
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public long getFLSINT64A(int index) {
        return fLSINT64A_.get(index);
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public Builder setFLSINT64A(
          int index, long value) {
        ensureFLSINT64AIsMutable();
        fLSINT64A_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public Builder addFLSINT64A(long value) {
        ensureFLSINT64AIsMutable();
        fLSINT64A_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public Builder addAllFLSINT64A(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFLSINT64AIsMutable();
        addAll(values, fLSINT64A_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public Builder clearFLSINT64A() {
        fLSINT64A_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private void ensureFLOATAIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          fLOATA_ = new java.util.ArrayList<java.lang.Float>(fLOATA_);
          bitField0_ |= 0x00001000;
         }
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getFLOATAList() {
        return java.util.Collections.unmodifiableList(fLOATA_);
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public int getFLOATACount() {
        return fLOATA_.size();
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public float getFLOATA(int index) {
        return fLOATA_.get(index);
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public Builder setFLOATA(
          int index, float value) {
        ensureFLOATAIsMutable();
        fLOATA_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public Builder addFLOATA(float value) {
        ensureFLOATAIsMutable();
        fLOATA_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public Builder addAllFLOATA(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFLOATAIsMutable();
        addAll(values, fLOATA_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public Builder clearFLOATA() {
        fLOATA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private void ensureDOUBLEAIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          dOUBLEA_ = new java.util.ArrayList<java.lang.Double>(dOUBLEA_);
          bitField0_ |= 0x00002000;
         }
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getDOUBLEAList() {
        return java.util.Collections.unmodifiableList(dOUBLEA_);
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public int getDOUBLEACount() {
        return dOUBLEA_.size();
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public double getDOUBLEA(int index) {
        return dOUBLEA_.get(index);
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public Builder setDOUBLEA(
          int index, double value) {
        ensureDOUBLEAIsMutable();
        dOUBLEA_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public Builder addDOUBLEA(double value) {
        ensureDOUBLEAIsMutable();
        dOUBLEA_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public Builder addAllDOUBLEA(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDOUBLEAIsMutable();
        addAll(values, dOUBLEA_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public Builder clearDOUBLEA() {
        dOUBLEA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      private void ensureSTRINGAIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          sTRINGA_ = new com.google.protobuf.LazyStringArrayList(sTRINGA_);
          bitField0_ |= 0x00004000;
         }
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public java.util.List<java.lang.String>
          getSTRINGAList() {
        return java.util.Collections.unmodifiableList(sTRINGA_);
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public int getSTRINGACount() {
        return sTRINGA_.size();
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public java.lang.String getSTRINGA(int index) {
        return sTRINGA_.get(index);
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSTRINGABytes(int index) {
        return sTRINGA_.getByteString(index);
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public Builder setSTRINGA(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
        sTRINGA_.set(index, value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public Builder addSTRINGA(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
        sTRINGA_.add(value);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public Builder addAllSTRINGA(
          java.lang.Iterable<java.lang.String> values) {
        ensureSTRINGAIsMutable();
        addAll(values, sTRINGA_);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public Builder clearSTRINGA() {
        sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public Builder addSTRINGABytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
        sTRINGA_.add(value);
        onChanged();
        return this;
      }

      private void ensureBYTESAIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          bYTESA_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bYTESA_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBYTESAList() {
        return java.util.Collections.unmodifiableList(bYTESA_);
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public int getBYTESACount() {
        return bYTESA_.size();
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getBYTESA(int index) {
        return bYTESA_.get(index);
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public Builder setBYTESA(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBYTESAIsMutable();
        bYTESA_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public Builder addBYTESA(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBYTESAIsMutable();
        bYTESA_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public Builder addAllBYTESA(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBYTESAIsMutable();
        addAll(values, bYTESA_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public Builder clearBYTESA() {
        bYTESA_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:xMsgData)
    }

    static {
      defaultInstance = new xMsgData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xMsgData)
  }

  /**
   * Protobuf type {@code xMsgPayload}
   *
   * <pre>
   *... Payload class ...
   * </pre>
   */
  public static final class xMsgPayload extends
      com.google.protobuf.GeneratedMessage
      implements xMsgPayloadOrBuilder {
    // repeated .xMsgPayload.Item item = 1;
    public static final int ITEM_FIELD_NUMBER = 1;
    private static final xMsgPayload defaultInstance;
    private static final long serialVersionUID = 0L;
    public static com.google.protobuf.Parser<xMsgPayload> PARSER =
        new com.google.protobuf.AbstractParser<xMsgPayload>() {
      public xMsgPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new xMsgPayload(input, extensionRegistry);
      }
    };
    private final com.google.protobuf.UnknownFieldSet unknownFields;
    private java.util.List<xMsgD.xMsgPayload.Item> item_;
    private byte memoizedIsInitialized = -1;
    private int memoizedSerializedSize = -1;
    // Use xMsgPayload.newBuilder() to construct.
    private xMsgPayload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }

    private xMsgPayload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private xMsgPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = new java.util.ArrayList<xMsgD.xMsgPayload.Item>();
                mutable_bitField0_ |= 0x00000001;
              }
              item_.add(input.readMessage(xMsgD.xMsgPayload.Item.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static xMsgPayload getDefaultInstance() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xMsgD.internal_static_xMsgPayload_descriptor;
    }

    public static xMsgD.xMsgPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static xMsgD.xMsgPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static xMsgD.xMsgPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static xMsgD.xMsgPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static xMsgD.xMsgPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static xMsgD.xMsgPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static xMsgD.xMsgPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }

    public static xMsgD.xMsgPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }

    public static xMsgD.xMsgPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }

    public static xMsgD.xMsgPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }

    public static Builder newBuilder(xMsgD.xMsgPayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public xMsgPayload getDefaultInstanceForType() {
      return defaultInstance;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xMsgD.internal_static_xMsgPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xMsgD.xMsgPayload.class, xMsgD.xMsgPayload.Builder.class);
    }

    @java.lang.Override
    public com.google.protobuf.Parser<xMsgPayload> getParserForType() {
      return PARSER;
    }

    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    public java.util.List<xMsgD.xMsgPayload.Item> getItemList() {
      return item_;
    }

    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    public java.util.List<? extends xMsgD.xMsgPayload.ItemOrBuilder>
        getItemOrBuilderList() {
      return item_;
    }

    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    public int getItemCount() {
      return item_.size();
    }

    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    public xMsgD.xMsgPayload.Item getItem(int index) {
      return item_.get(index);
    }

    /**
     * <code>repeated .xMsgPayload.Item item = 1;</code>
     */
    public xMsgD.xMsgPayload.ItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      item_ = java.util.Collections.emptyList();
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public Builder newBuilderForType() { return newBuilder(); }

    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public interface ItemOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required .xMsgData data = 2;
      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      boolean hasData();
      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      xMsgD.xMsgData getData();
      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      xMsgD.xMsgDataOrBuilder getDataOrBuilder();
    }

    /**
     * Protobuf type {@code xMsgPayload.Item}
     */
    public static final class Item extends
        com.google.protobuf.GeneratedMessage
        implements ItemOrBuilder {
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      // required .xMsgData data = 2;
      public static final int DATA_FIELD_NUMBER = 2;
      private static final Item defaultInstance;
      private static final long serialVersionUID = 0L;
      public static com.google.protobuf.Parser<Item> PARSER =
          new com.google.protobuf.AbstractParser<Item>() {
        public Item parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Item(input, extensionRegistry);
        }
      };
      private final com.google.protobuf.UnknownFieldSet unknownFields;
      private int bitField0_;
      private java.lang.Object name_;
      private xMsgD.xMsgData data_;
      private byte memoizedIsInitialized = -1;
      private int memoizedSerializedSize = -1;

      // Use Item.newBuilder() to construct.
      private Item(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }

      private Item(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
      private Item(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                xMsgD.xMsgData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = data_.toBuilder();
                }
                data_ = input.readMessage(xMsgD.xMsgData.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(data_);
                  data_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }

      public static Item getDefaultInstance() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgPayload_Item_descriptor;
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static xMsgD.xMsgPayload.Item parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }

      public static xMsgD.xMsgPayload.Item parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }

      public static xMsgD.xMsgPayload.Item parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }

      public static Builder newBuilder(xMsgD.xMsgPayload.Item prototype) {
        return newBuilder().mergeFrom(prototype);
      }

      public Item getDefaultInstanceForType() {
        return defaultInstance;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgPayload_Item_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgPayload.Item.class, xMsgD.xMsgPayload.Item.Builder.class);
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Item> getParserForType() {
        return PARSER;
      }

      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }

      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }

      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }

      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      public xMsgD.xMsgData getData() {
        return data_;
      }

      /**
       * <code>required .xMsgData data = 2;</code>
       *
       * <pre>
       * data
       * </pre>
       */
      public xMsgD.xMsgDataOrBuilder getDataOrBuilder() {
        return data_;
      }

      private void initFields() {
        name_ = "";
        data_ = xMsgD.xMsgData.getDefaultInstance();
      }

      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, data_);
        }
        getUnknownFields().writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, data_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public Builder newBuilderForType() { return newBuilder(); }

      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code xMsgPayload.Item}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements xMsgD.xMsgPayload.ItemOrBuilder {
        private int bitField0_;
        // required string name = 1;
        private java.lang.Object name_ = "";
        // required .xMsgData data = 2;
        private xMsgD.xMsgData data_ = xMsgD.xMsgData.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            xMsgD.xMsgData, xMsgD.xMsgData.Builder, xMsgD.xMsgDataOrBuilder> dataBuilder_;
        // Construct using xMsgD.xMsgPayload.Item.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xMsgD.internal_static_xMsgPayload_Item_descriptor;
        }

        private static Builder create() {
          return new Builder();
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xMsgD.internal_static_xMsgPayload_Item_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xMsgD.xMsgPayload.Item.class, xMsgD.xMsgPayload.Item.Builder.class);
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getDataFieldBuilder();
          }
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (dataBuilder_ == null) {
            data_ = xMsgD.xMsgData.getDefaultInstance();
          } else {
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xMsgD.internal_static_xMsgPayload_Item_descriptor;
        }

        public xMsgD.xMsgPayload.Item getDefaultInstanceForType() {
          return xMsgD.xMsgPayload.Item.getDefaultInstance();
        }

        public xMsgD.xMsgPayload.Item build() {
          xMsgD.xMsgPayload.Item result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public xMsgD.xMsgPayload.Item buildPartial() {
          xMsgD.xMsgPayload.Item result = new xMsgD.xMsgPayload.Item(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (dataBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = dataBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xMsgD.xMsgPayload.Item) {
            return mergeFrom((xMsgD.xMsgPayload.Item)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xMsgD.xMsgPayload.Item other) {
          if (other == xMsgD.xMsgPayload.Item.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasData()) {
            mergeData(other.getData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {

            return false;
          }
          if (!hasData()) {

            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xMsgD.xMsgPayload.Item parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xMsgD.xMsgPayload.Item) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }

        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public xMsgD.xMsgData getData() {
          if (dataBuilder_ == null) {
            return data_;
          } else {
            return dataBuilder_.getMessage();
          }
        }

        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public Builder setData(
            xMsgD.xMsgData.Builder builderForValue) {
          if (dataBuilder_ == null) {
            data_ = builderForValue.build();
            onChanged();
          } else {
            dataBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }

        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public Builder setData(xMsgD.xMsgData value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            data_ = value;
            onChanged();
          } else {
            dataBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }

        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public Builder mergeData(xMsgD.xMsgData value) {
          if (dataBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                data_ != xMsgD.xMsgData.getDefaultInstance()) {
              data_ =
                xMsgD.xMsgData.newBuilder(data_).mergeFrom(value).buildPartial();
            } else {
              data_ = value;
            }
            onChanged();
          } else {
            dataBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public Builder clearData() {
          if (dataBuilder_ == null) {
            data_ = xMsgD.xMsgData.getDefaultInstance();
            onChanged();
          } else {
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public xMsgD.xMsgData.Builder getDataBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getDataFieldBuilder().getBuilder();
        }
        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        public xMsgD.xMsgDataOrBuilder getDataOrBuilder() {
          if (dataBuilder_ != null) {
            return dataBuilder_.getMessageOrBuilder();
          } else {
            return data_;
          }
        }
        /**
         * <code>required .xMsgData data = 2;</code>
         *
         * <pre>
         * data
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            xMsgD.xMsgData, xMsgD.xMsgData.Builder, xMsgD.xMsgDataOrBuilder>
            getDataFieldBuilder() {
          if (dataBuilder_ == null) {
            dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                xMsgD.xMsgData, xMsgD.xMsgData.Builder, xMsgD.xMsgDataOrBuilder>(
                    data_,
                    getParentForChildren(),
                    isClean());
            data_ = null;
          }
          return dataBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:xMsgPayload.Item)
      }

      static {
        defaultInstance = new Item(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:xMsgPayload.Item)
    }

    /**
     * Protobuf type {@code xMsgPayload}
     *
     * <pre>
     *... Payload class ...
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements xMsgD.xMsgPayloadOrBuilder {
      private int bitField0_;
      // repeated .xMsgPayload.Item item = 1;
      private java.util.List<xMsgD.xMsgPayload.Item> item_ =
        java.util.Collections.emptyList();
      private com.google.protobuf.RepeatedFieldBuilder<
          xMsgD.xMsgPayload.Item, xMsgD.xMsgPayload.Item.Builder, xMsgD.xMsgPayload.ItemOrBuilder> itemBuilder_;

      // Construct using xMsgD.xMsgPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgPayload_descriptor;
      }

      private static Builder create() {
        return new Builder();
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgPayload.class, xMsgD.xMsgPayload.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemFieldBuilder();
        }
      }

      public Builder clear() {
        super.clear();
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xMsgD.internal_static_xMsgPayload_descriptor;
      }

      public xMsgD.xMsgPayload getDefaultInstanceForType() {
        return xMsgD.xMsgPayload.getDefaultInstance();
      }

      public xMsgD.xMsgPayload build() {
        xMsgD.xMsgPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xMsgD.xMsgPayload buildPartial() {
        xMsgD.xMsgPayload result = new xMsgD.xMsgPayload(this);
        int from_bitField0_ = bitField0_;
        if (itemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            item_ = java.util.Collections.unmodifiableList(item_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xMsgD.xMsgPayload) {
          return mergeFrom((xMsgD.xMsgPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xMsgD.xMsgPayload other) {
        if (other == xMsgD.xMsgPayload.getDefaultInstance()) return this;
        if (itemBuilder_ == null) {
          if (!other.item_.isEmpty()) {
            if (item_.isEmpty()) {
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemIsMutable();
              item_.addAll(other.item_);
            }
            onChanged();
          }
        } else {
          if (!other.item_.isEmpty()) {
            if (itemBuilder_.isEmpty()) {
              itemBuilder_.dispose();
              itemBuilder_ = null;
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemFieldBuilder() : null;
            } else {
              itemBuilder_.addAllMessages(other.item_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xMsgD.xMsgPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xMsgD.xMsgPayload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<xMsgD.xMsgPayload.Item>(item_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public java.util.List<xMsgD.xMsgPayload.Item> getItemList() {
        if (itemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(item_);
        } else {
          return itemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public int getItemCount() {
        if (itemBuilder_ == null) {
          return item_.size();
        } else {
          return itemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public xMsgD.xMsgPayload.Item getItem(int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);
        } else {
          return itemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder setItem(
          int index, xMsgD.xMsgPayload.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.set(index, value);
          onChanged();
        } else {
          itemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder setItem(
          int index, xMsgD.xMsgPayload.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder addItem(xMsgD.xMsgPayload.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(value);
          onChanged();
        } else {
          itemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder addItem(
          int index, xMsgD.xMsgPayload.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(index, value);
          onChanged();
        } else {
          itemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder addItem(
          xMsgD.xMsgPayload.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder addItem(
          int index, xMsgD.xMsgPayload.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends xMsgD.xMsgPayload.Item> values) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          addAll(values, item_);
          onChanged();
        } else {
          itemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public Builder removeItem(int index) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.remove(index);
          onChanged();
        } else {
          itemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public xMsgD.xMsgPayload.Item.Builder getItemBuilder(
          int index) {
        return getItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public xMsgD.xMsgPayload.ItemOrBuilder getItemOrBuilder(
          int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);  } else {
          return itemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public java.util.List<? extends xMsgD.xMsgPayload.ItemOrBuilder>
           getItemOrBuilderList() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(item_);
        }
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public xMsgD.xMsgPayload.Item.Builder addItemBuilder() {
        return getItemFieldBuilder().addBuilder(
            xMsgD.xMsgPayload.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public xMsgD.xMsgPayload.Item.Builder addItemBuilder(
          int index) {
        return getItemFieldBuilder().addBuilder(
            index, xMsgD.xMsgPayload.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .xMsgPayload.Item item = 1;</code>
       */
      public java.util.List<xMsgD.xMsgPayload.Item.Builder>
           getItemBuilderList() {
        return getItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          xMsgD.xMsgPayload.Item, xMsgD.xMsgPayload.Item.Builder, xMsgD.xMsgPayload.ItemOrBuilder>
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              xMsgD.xMsgPayload.Item, xMsgD.xMsgPayload.Item.Builder, xMsgD.xMsgPayload.ItemOrBuilder>(
                  item_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:xMsgPayload)
    }

    static {
      defaultInstance = new xMsgPayload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xMsgPayload)
  }

  // @@protoc_insertion_point(outer_class_scope)
}
