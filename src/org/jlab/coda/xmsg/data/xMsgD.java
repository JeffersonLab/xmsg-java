package org.jlab.coda.xmsg.data;
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xMsgData.proto

public final class xMsgD {
  private xMsgD() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface xMsgDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional fixed32 id = 1;
    /**
     * <code>optional fixed32 id = 1;</code>
     *
     * <pre>
     * communication id, used to gnetically relate messages
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional fixed32 id = 1;</code>
     *
     * <pre>
     * communication id, used to gnetically relate messages
     * </pre>
     */
    int getId();

    // optional string authour = 2;
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    boolean hasAuthour();
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    java.lang.String getAuthour();
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    com.google.protobuf.ByteString
        getAuthourBytes();

    // optional .xMsgData.Data data = 3;
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    boolean hasData();
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    xMsgD.xMsgData.Data getData();
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    xMsgD.xMsgData.DataOrBuilder getDataOrBuilder();

    // optional .xMsgData.DataType type = 4;
    /**
     * <code>optional .xMsgData.DataType type = 4;</code>
     *
     * <pre>
     *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
     * filed, otherwise "data" filed
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .xMsgData.DataType type = 4;</code>
     *
     * <pre>
     *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
     * filed, otherwise "data" filed
     * </pre>
     */
    xMsgD.xMsgData.DataType getType();

    // optional string byteOrder = 5;
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    boolean hasByteOrder();
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    java.lang.String getByteOrder();
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    com.google.protobuf.ByteString
        getByteOrderBytes();

    // optional string dataDescription = 6;
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    boolean hasDataDescription();
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    java.lang.String getDataDescription();
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    com.google.protobuf.ByteString
        getDataDescriptionBytes();

    // repeated .xMsgData.Payload payload = 7;
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    java.util.List<xMsgD.xMsgData.Payload> 
        getPayloadList();
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    xMsgD.xMsgData.Payload getPayload(int index);
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    int getPayloadCount();
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    java.util.List<? extends xMsgD.xMsgData.PayloadOrBuilder> 
        getPayloadOrBuilderList();
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    xMsgD.xMsgData.PayloadOrBuilder getPayloadOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code xMsgData}
   */
  public static final class xMsgData extends
      com.google.protobuf.GeneratedMessage
      implements xMsgDataOrBuilder {
    // Use xMsgData.newBuilder() to construct.
    private xMsgData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private xMsgData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final xMsgData defaultInstance;
    public static xMsgData getDefaultInstance() {
      return defaultInstance;
    }

    public xMsgData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private xMsgData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              id_ = input.readFixed32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              authour_ = input.readBytes();
              break;
            }
            case 26: {
              xMsgD.xMsgData.Data.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(xMsgD.xMsgData.Data.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              xMsgD.xMsgData.DataType value = xMsgD.xMsgData.DataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              byteOrder_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              dataDescription_ = input.readBytes();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                payload_ = new java.util.ArrayList<xMsgD.xMsgData.Payload>();
                mutable_bitField0_ |= 0x00000040;
              }
              payload_.add(input.readMessage(xMsgD.xMsgData.Payload.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          payload_ = java.util.Collections.unmodifiableList(payload_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xMsgD.internal_static_xMsgData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xMsgD.internal_static_xMsgData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xMsgD.xMsgData.class, xMsgD.xMsgData.Builder.class);
    }

    public static com.google.protobuf.Parser<xMsgData> PARSER =
        new com.google.protobuf.AbstractParser<xMsgData>() {
      public xMsgData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new xMsgData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<xMsgData> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code xMsgData.DataType}
     *
     * <pre>
     * data type enumeration
     * </pre>
     */
    public enum DataType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      VLSINT32(0, 1),
      /**
       * <code>VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      VLSINT64(1, 2),
      /**
       * <code>FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      FLSINT32(2, 3),
      /**
       * <code>FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      FLSINT64(3, 4),
      /**
       * <code>FLOAT = 5;</code>
       */
      FLOAT(4, 5),
      /**
       * <code>DOUBLE = 6;</code>
       */
      DOUBLE(5, 6),
      /**
       * <code>STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      STRING(6, 7),
      /**
       * <code>BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      BYTES(7, 8),
      /**
       * <code>VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      VLSINT32A(8, 9),
      /**
       * <code>VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      VLSINT64A(9, 10),
      /**
       * <code>FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      FLSINT32A(10, 11),
      /**
       * <code>FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      FLSINT64A(11, 12),
      /**
       * <code>FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      FLOATA(12, 13),
      /**
       * <code>DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      DOUBLEA(13, 14),
      /**
       * <code>STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      STRINGA(14, 15),
      /**
       * <code>BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      BYTESA(15, 16),
      /**
       * <code>PAYLOAD = 17;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      PAYLOAD(16, 17),
      ;

      /**
       * <code>VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public static final int VLSINT32_VALUE = 1;
      /**
       * <code>VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public static final int VLSINT64_VALUE = 2;
      /**
       * <code>FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public static final int FLSINT32_VALUE = 3;
      /**
       * <code>FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public static final int FLSINT64_VALUE = 4;
      /**
       * <code>FLOAT = 5;</code>
       */
      public static final int FLOAT_VALUE = 5;
      /**
       * <code>DOUBLE = 6;</code>
       */
      public static final int DOUBLE_VALUE = 6;
      /**
       * <code>STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public static final int STRING_VALUE = 7;
      /**
       * <code>BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public static final int BYTES_VALUE = 8;
      /**
       * <code>VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public static final int VLSINT32A_VALUE = 9;
      /**
       * <code>VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public static final int VLSINT64A_VALUE = 10;
      /**
       * <code>FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public static final int FLSINT32A_VALUE = 11;
      /**
       * <code>FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public static final int FLSINT64A_VALUE = 12;
      /**
       * <code>FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public static final int FLOATA_VALUE = 13;
      /**
       * <code>DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public static final int DOUBLEA_VALUE = 14;
      /**
       * <code>STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public static final int STRINGA_VALUE = 15;
      /**
       * <code>BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public static final int BYTESA_VALUE = 16;
      /**
       * <code>PAYLOAD = 17;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      public static final int PAYLOAD_VALUE = 17;


      public final int getNumber() { return value; }

      public static DataType valueOf(int value) {
        switch (value) {
          case 1: return VLSINT32;
          case 2: return VLSINT64;
          case 3: return FLSINT32;
          case 4: return FLSINT64;
          case 5: return FLOAT;
          case 6: return DOUBLE;
          case 7: return STRING;
          case 8: return BYTES;
          case 9: return VLSINT32A;
          case 10: return VLSINT64A;
          case 11: return FLSINT32A;
          case 12: return FLSINT64A;
          case 13: return FLOATA;
          case 14: return DOUBLEA;
          case 15: return STRINGA;
          case 16: return BYTESA;
          case 17: return PAYLOAD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return xMsgD.xMsgData.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataType[] VALUES = values();

      public static DataType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private DataType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:xMsgData.DataType)
    }

    public interface DataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional sint32 VLSINT32 = 1;
      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      boolean hasVLSINT32();
      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      int getVLSINT32();

      // optional sint64 VLSINT64 = 2;
      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      boolean hasVLSINT64();
      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      long getVLSINT64();

      // optional sfixed32 FLSINT32 = 3;
      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      boolean hasFLSINT32();
      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      int getFLSINT32();

      // optional sfixed64 FLSINT64 = 4;
      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      boolean hasFLSINT64();
      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      long getFLSINT64();

      // optional float FLOAT = 5;
      /**
       * <code>optional float FLOAT = 5;</code>
       */
      boolean hasFLOAT();
      /**
       * <code>optional float FLOAT = 5;</code>
       */
      float getFLOAT();

      // optional double DOUBLE = 6;
      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      boolean hasDOUBLE();
      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      double getDOUBLE();

      // optional string STRING = 7;
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      boolean hasSTRING();
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      java.lang.String getSTRING();
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      com.google.protobuf.ByteString
          getSTRINGBytes();

      // optional bytes BYTES = 8;
      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      boolean hasBYTES();
      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      com.google.protobuf.ByteString getBYTES();

      // repeated sint32 VLSINT32A = 9;
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      java.util.List<java.lang.Integer> getVLSINT32AList();
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      int getVLSINT32ACount();
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      int getVLSINT32A(int index);

      // repeated sint64 VLSINT64A = 10;
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      java.util.List<java.lang.Long> getVLSINT64AList();
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      int getVLSINT64ACount();
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      long getVLSINT64A(int index);

      // repeated sfixed32 FLSINT32A = 11;
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      java.util.List<java.lang.Integer> getFLSINT32AList();
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      int getFLSINT32ACount();
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      int getFLSINT32A(int index);

      // repeated sfixed64 FLSINT64A = 12;
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      java.util.List<java.lang.Long> getFLSINT64AList();
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      int getFLSINT64ACount();
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      long getFLSINT64A(int index);

      // repeated float FLOATA = 13;
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      java.util.List<java.lang.Float> getFLOATAList();
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      int getFLOATACount();
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      float getFLOATA(int index);

      // repeated double DOUBLEA = 14;
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      java.util.List<java.lang.Double> getDOUBLEAList();
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      int getDOUBLEACount();
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      double getDOUBLEA(int index);

      // repeated string STRINGA = 15;
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      java.util.List<java.lang.String>
      getSTRINGAList();
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      int getSTRINGACount();
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      java.lang.String getSTRINGA(int index);
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      com.google.protobuf.ByteString
          getSTRINGABytes(int index);

      // repeated bytes BYTESA = 16;
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      java.util.List<com.google.protobuf.ByteString> getBYTESAList();
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      int getBYTESACount();
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      com.google.protobuf.ByteString getBYTESA(int index);
    }
    /**
     * Protobuf type {@code xMsgData.Data}
     *
     * <pre>
     * Data class
     * </pre>
     */
    public static final class Data extends
        com.google.protobuf.GeneratedMessage
        implements DataOrBuilder {
      // Use Data.newBuilder() to construct.
      private Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Data defaultInstance;
      public static Data getDefaultInstance() {
        return defaultInstance;
      }

      public Data getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Data(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                vLSINT32_ = input.readSInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                vLSINT64_ = input.readSInt64();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                fLSINT32_ = input.readSFixed32();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                fLSINT64_ = input.readSFixed64();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                fLOAT_ = input.readFloat();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                dOUBLE_ = input.readDouble();
                break;
              }
              case 58: {
                bitField0_ |= 0x00000040;
                sTRING_ = input.readBytes();
                break;
              }
              case 66: {
                bitField0_ |= 0x00000080;
                bYTES_ = input.readBytes();
                break;
              }
              case 72: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                vLSINT32A_.add(input.readSInt32());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  vLSINT32A_.add(input.readSInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  vLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000200;
                }
                vLSINT64A_.add(input.readSInt64());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                  vLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000200;
                }
                while (input.getBytesUntilLimit() > 0) {
                  vLSINT64A_.add(input.readSInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 93: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000400;
                }
                fLSINT32A_.add(input.readSFixed32());
                break;
              }
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                  fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000400;
                }
                while (input.getBytesUntilLimit() > 0) {
                  fLSINT32A_.add(input.readSFixed32());
                }
                input.popLimit(limit);
                break;
              }
              case 97: {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  fLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000800;
                }
                fLSINT64A_.add(input.readSFixed64());
                break;
              }
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                  fLSINT64A_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000800;
                }
                while (input.getBytesUntilLimit() > 0) {
                  fLSINT64A_.add(input.readSFixed64());
                }
                input.popLimit(limit);
                break;
              }
              case 109: {
                if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                  fLOATA_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00001000;
                }
                fLOATA_.add(input.readFloat());
                break;
              }
              case 106: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                  fLOATA_ = new java.util.ArrayList<java.lang.Float>();
                  mutable_bitField0_ |= 0x00001000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  fLOATA_.add(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 113: {
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                  dOUBLEA_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00002000;
                }
                dOUBLEA_.add(input.readDouble());
                break;
              }
              case 114: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                  dOUBLEA_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00002000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  dOUBLEA_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 122: {
                if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                  sTRINGA_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00004000;
                }
                sTRINGA_.add(input.readBytes());
                break;
              }
              case 130: {
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  bYTESA_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00008000;
                }
                bYTESA_.add(input.readBytes());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            vLSINT32A_ = java.util.Collections.unmodifiableList(vLSINT32A_);
          }
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            vLSINT64A_ = java.util.Collections.unmodifiableList(vLSINT64A_);
          }
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            fLSINT32A_ = java.util.Collections.unmodifiableList(fLSINT32A_);
          }
          if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
            fLSINT64A_ = java.util.Collections.unmodifiableList(fLSINT64A_);
          }
          if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
            fLOATA_ = java.util.Collections.unmodifiableList(fLOATA_);
          }
          if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
            dOUBLEA_ = java.util.Collections.unmodifiableList(dOUBLEA_);
          }
          if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
            sTRINGA_ = new com.google.protobuf.UnmodifiableLazyStringList(sTRINGA_);
          }
          if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
            bYTESA_ = java.util.Collections.unmodifiableList(bYTESA_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgData_Data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgData_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgData.Data.class, xMsgD.xMsgData.Data.Builder.class);
      }

      public static com.google.protobuf.Parser<Data> PARSER =
          new com.google.protobuf.AbstractParser<Data>() {
        public Data parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Data(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Data> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional sint32 VLSINT32 = 1;
      public static final int VLSINT32_FIELD_NUMBER = 1;
      private int vLSINT32_;
      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public boolean hasVLSINT32() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 VLSINT32 = 1;</code>
       *
       * <pre>
       * variable length signed int32
       * </pre>
       */
      public int getVLSINT32() {
        return vLSINT32_;
      }

      // optional sint64 VLSINT64 = 2;
      public static final int VLSINT64_FIELD_NUMBER = 2;
      private long vLSINT64_;
      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public boolean hasVLSINT64() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint64 VLSINT64 = 2;</code>
       *
       * <pre>
       * variable length signed int64
       * </pre>
       */
      public long getVLSINT64() {
        return vLSINT64_;
      }

      // optional sfixed32 FLSINT32 = 3;
      public static final int FLSINT32_FIELD_NUMBER = 3;
      private int fLSINT32_;
      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public boolean hasFLSINT32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sfixed32 FLSINT32 = 3;</code>
       *
       * <pre>
       * fixed length signed int32
       * </pre>
       */
      public int getFLSINT32() {
        return fLSINT32_;
      }

      // optional sfixed64 FLSINT64 = 4;
      public static final int FLSINT64_FIELD_NUMBER = 4;
      private long fLSINT64_;
      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public boolean hasFLSINT64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sfixed64 FLSINT64 = 4;</code>
       *
       * <pre>
       * fixed length signed int64
       * </pre>
       */
      public long getFLSINT64() {
        return fLSINT64_;
      }

      // optional float FLOAT = 5;
      public static final int FLOAT_FIELD_NUMBER = 5;
      private float fLOAT_;
      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public boolean hasFLOAT() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float FLOAT = 5;</code>
       */
      public float getFLOAT() {
        return fLOAT_;
      }

      // optional double DOUBLE = 6;
      public static final int DOUBLE_FIELD_NUMBER = 6;
      private double dOUBLE_;
      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public boolean hasDOUBLE() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double DOUBLE = 6;</code>
       */
      public double getDOUBLE() {
        return dOUBLE_;
      }

      // optional string STRING = 7;
      public static final int STRING_FIELD_NUMBER = 7;
      private java.lang.Object sTRING_;
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public boolean hasSTRING() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public java.lang.String getSTRING() {
        java.lang.Object ref = sTRING_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sTRING_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string STRING = 7;</code>
       *
       * <pre>
       * contains UTF-8 encoding or 7-bit ASCII text
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSTRINGBytes() {
        java.lang.Object ref = sTRING_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sTRING_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional bytes BYTES = 8;
      public static final int BYTES_FIELD_NUMBER = 8;
      private com.google.protobuf.ByteString bYTES_;
      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public boolean hasBYTES() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes BYTES = 8;</code>
       *
       * <pre>
       * contains arbitrary sequence of bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getBYTES() {
        return bYTES_;
      }

      // repeated sint32 VLSINT32A = 9;
      public static final int VLSINT32A_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Integer> vLSINT32A_;
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getVLSINT32AList() {
        return vLSINT32A_;
      }
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public int getVLSINT32ACount() {
        return vLSINT32A_.size();
      }
      /**
       * <code>repeated sint32 VLSINT32A = 9;</code>
       *
       * <pre>
       * array of variable length signed int32s
       * </pre>
       */
      public int getVLSINT32A(int index) {
        return vLSINT32A_.get(index);
      }

      // repeated sint64 VLSINT64A = 10;
      public static final int VLSINT64A_FIELD_NUMBER = 10;
      private java.util.List<java.lang.Long> vLSINT64A_;
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getVLSINT64AList() {
        return vLSINT64A_;
      }
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public int getVLSINT64ACount() {
        return vLSINT64A_.size();
      }
      /**
       * <code>repeated sint64 VLSINT64A = 10;</code>
       *
       * <pre>
       * array of variable length signed int64s
       * </pre>
       */
      public long getVLSINT64A(int index) {
        return vLSINT64A_.get(index);
      }

      // repeated sfixed32 FLSINT32A = 11;
      public static final int FLSINT32A_FIELD_NUMBER = 11;
      private java.util.List<java.lang.Integer> fLSINT32A_;
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFLSINT32AList() {
        return fLSINT32A_;
      }
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public int getFLSINT32ACount() {
        return fLSINT32A_.size();
      }
      /**
       * <code>repeated sfixed32 FLSINT32A = 11;</code>
       *
       * <pre>
       * array of fixed length signed int32s
       * </pre>
       */
      public int getFLSINT32A(int index) {
        return fLSINT32A_.get(index);
      }

      // repeated sfixed64 FLSINT64A = 12;
      public static final int FLSINT64A_FIELD_NUMBER = 12;
      private java.util.List<java.lang.Long> fLSINT64A_;
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFLSINT64AList() {
        return fLSINT64A_;
      }
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public int getFLSINT64ACount() {
        return fLSINT64A_.size();
      }
      /**
       * <code>repeated sfixed64 FLSINT64A = 12;</code>
       *
       * <pre>
       * array of fixed length signed int64s
       * </pre>
       */
      public long getFLSINT64A(int index) {
        return fLSINT64A_.get(index);
      }

      // repeated float FLOATA = 13;
      public static final int FLOATA_FIELD_NUMBER = 13;
      private java.util.List<java.lang.Float> fLOATA_;
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getFLOATAList() {
        return fLOATA_;
      }
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public int getFLOATACount() {
        return fLOATA_.size();
      }
      /**
       * <code>repeated float FLOATA = 13;</code>
       *
       * <pre>
       * array of floats
       * </pre>
       */
      public float getFLOATA(int index) {
        return fLOATA_.get(index);
      }

      // repeated double DOUBLEA = 14;
      public static final int DOUBLEA_FIELD_NUMBER = 14;
      private java.util.List<java.lang.Double> dOUBLEA_;
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getDOUBLEAList() {
        return dOUBLEA_;
      }
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public int getDOUBLEACount() {
        return dOUBLEA_.size();
      }
      /**
       * <code>repeated double DOUBLEA = 14;</code>
       *
       * <pre>
       * array of doubles
       * </pre>
       */
      public double getDOUBLEA(int index) {
        return dOUBLEA_.get(index);
      }

      // repeated string STRINGA = 15;
      public static final int STRINGA_FIELD_NUMBER = 15;
      private com.google.protobuf.LazyStringList sTRINGA_;
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public java.util.List<java.lang.String>
          getSTRINGAList() {
        return sTRINGA_;
      }
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public int getSTRINGACount() {
        return sTRINGA_.size();
      }
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public java.lang.String getSTRINGA(int index) {
        return sTRINGA_.get(index);
      }
      /**
       * <code>repeated string STRINGA = 15;</code>
       *
       * <pre>
       * array of UTF-8 encoded or 7-bit ASCII strings
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSTRINGABytes(int index) {
        return sTRINGA_.getByteString(index);
      }

      // repeated bytes BYTESA = 16;
      public static final int BYTESA_FIELD_NUMBER = 16;
      private java.util.List<com.google.protobuf.ByteString> bYTESA_;
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBYTESAList() {
        return bYTESA_;
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public int getBYTESACount() {
        return bYTESA_.size();
      }
      /**
       * <code>repeated bytes BYTESA = 16;</code>
       *
       * <pre>
       * array of arbitrary sequence of bytes
       * </pre>
       */
      public com.google.protobuf.ByteString getBYTESA(int index) {
        return bYTESA_.get(index);
      }

      private void initFields() {
        vLSINT32_ = 0;
        vLSINT64_ = 0L;
        fLSINT32_ = 0;
        fLSINT64_ = 0L;
        fLOAT_ = 0F;
        dOUBLE_ = 0D;
        sTRING_ = "";
        bYTES_ = com.google.protobuf.ByteString.EMPTY;
        vLSINT32A_ = java.util.Collections.emptyList();
        vLSINT64A_ = java.util.Collections.emptyList();
        fLSINT32A_ = java.util.Collections.emptyList();
        fLSINT64A_ = java.util.Collections.emptyList();
        fLOATA_ = java.util.Collections.emptyList();
        dOUBLEA_ = java.util.Collections.emptyList();
        sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bYTESA_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, vLSINT32_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt64(2, vLSINT64_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeSFixed32(3, fLSINT32_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeSFixed64(4, fLSINT64_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, fLOAT_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeDouble(6, dOUBLE_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getSTRINGBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, bYTES_);
        }
        for (int i = 0; i < vLSINT32A_.size(); i++) {
          output.writeSInt32(9, vLSINT32A_.get(i));
        }
        for (int i = 0; i < vLSINT64A_.size(); i++) {
          output.writeSInt64(10, vLSINT64A_.get(i));
        }
        for (int i = 0; i < fLSINT32A_.size(); i++) {
          output.writeSFixed32(11, fLSINT32A_.get(i));
        }
        for (int i = 0; i < fLSINT64A_.size(); i++) {
          output.writeSFixed64(12, fLSINT64A_.get(i));
        }
        for (int i = 0; i < fLOATA_.size(); i++) {
          output.writeFloat(13, fLOATA_.get(i));
        }
        for (int i = 0; i < dOUBLEA_.size(); i++) {
          output.writeDouble(14, dOUBLEA_.get(i));
        }
        for (int i = 0; i < sTRINGA_.size(); i++) {
          output.writeBytes(15, sTRINGA_.getByteString(i));
        }
        for (int i = 0; i < bYTESA_.size(); i++) {
          output.writeBytes(16, bYTESA_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, vLSINT32_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(2, vLSINT64_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSFixed32Size(3, fLSINT32_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSFixed64Size(4, fLSINT64_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, fLOAT_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, dOUBLE_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getSTRINGBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, bYTES_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < vLSINT32A_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeSInt32SizeNoTag(vLSINT32A_.get(i));
          }
          size += dataSize;
          size += 1 * getVLSINT32AList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < vLSINT64A_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeSInt64SizeNoTag(vLSINT64A_.get(i));
          }
          size += dataSize;
          size += 1 * getVLSINT64AList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getFLSINT32AList().size();
          size += dataSize;
          size += 1 * getFLSINT32AList().size();
        }
        {
          int dataSize = 0;
          dataSize = 8 * getFLSINT64AList().size();
          size += dataSize;
          size += 1 * getFLSINT64AList().size();
        }
        {
          int dataSize = 0;
          dataSize = 4 * getFLOATAList().size();
          size += dataSize;
          size += 1 * getFLOATAList().size();
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDOUBLEAList().size();
          size += dataSize;
          size += 1 * getDOUBLEAList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < sTRINGA_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(sTRINGA_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getSTRINGAList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < bYTESA_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(bYTESA_.get(i));
          }
          size += dataSize;
          size += 2 * getBYTESAList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static xMsgD.xMsgData.Data parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xMsgD.xMsgData.Data parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xMsgD.xMsgData.Data parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xMsgD.xMsgData.Data parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xMsgD.xMsgData.Data parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static xMsgD.xMsgData.Data parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static xMsgD.xMsgData.Data parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static xMsgD.xMsgData.Data parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static xMsgD.xMsgData.Data parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static xMsgD.xMsgData.Data parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(xMsgD.xMsgData.Data prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code xMsgData.Data}
       *
       * <pre>
       * Data class
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements xMsgD.xMsgData.DataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xMsgD.internal_static_xMsgData_Data_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xMsgD.internal_static_xMsgData_Data_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xMsgD.xMsgData.Data.class, xMsgD.xMsgData.Data.Builder.class);
        }

        // Construct using xMsgD.xMsgData.Data.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          vLSINT32_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          vLSINT64_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          fLSINT32_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          fLSINT64_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          fLOAT_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          dOUBLE_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000020);
          sTRING_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          bYTES_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000080);
          vLSINT32A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          vLSINT64A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          fLSINT32A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          fLSINT64A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          fLOATA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          dOUBLEA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00004000);
          bYTESA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xMsgD.internal_static_xMsgData_Data_descriptor;
        }

        public xMsgD.xMsgData.Data getDefaultInstanceForType() {
          return xMsgD.xMsgData.Data.getDefaultInstance();
        }

        public xMsgD.xMsgData.Data build() {
          xMsgD.xMsgData.Data result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public xMsgD.xMsgData.Data buildPartial() {
          xMsgD.xMsgData.Data result = new xMsgD.xMsgData.Data(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.vLSINT32_ = vLSINT32_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.vLSINT64_ = vLSINT64_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.fLSINT32_ = fLSINT32_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.fLSINT64_ = fLSINT64_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.fLOAT_ = fLOAT_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.dOUBLE_ = dOUBLE_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.sTRING_ = sTRING_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.bYTES_ = bYTES_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            vLSINT32A_ = java.util.Collections.unmodifiableList(vLSINT32A_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.vLSINT32A_ = vLSINT32A_;
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            vLSINT64A_ = java.util.Collections.unmodifiableList(vLSINT64A_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.vLSINT64A_ = vLSINT64A_;
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            fLSINT32A_ = java.util.Collections.unmodifiableList(fLSINT32A_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.fLSINT32A_ = fLSINT32A_;
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            fLSINT64A_ = java.util.Collections.unmodifiableList(fLSINT64A_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.fLSINT64A_ = fLSINT64A_;
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            fLOATA_ = java.util.Collections.unmodifiableList(fLOATA_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.fLOATA_ = fLOATA_;
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            dOUBLEA_ = java.util.Collections.unmodifiableList(dOUBLEA_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.dOUBLEA_ = dOUBLEA_;
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            sTRINGA_ = new com.google.protobuf.UnmodifiableLazyStringList(
                sTRINGA_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.sTRINGA_ = sTRINGA_;
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            bYTESA_ = java.util.Collections.unmodifiableList(bYTESA_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.bYTESA_ = bYTESA_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xMsgD.xMsgData.Data) {
            return mergeFrom((xMsgD.xMsgData.Data)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xMsgD.xMsgData.Data other) {
          if (other == xMsgD.xMsgData.Data.getDefaultInstance()) return this;
          if (other.hasVLSINT32()) {
            setVLSINT32(other.getVLSINT32());
          }
          if (other.hasVLSINT64()) {
            setVLSINT64(other.getVLSINT64());
          }
          if (other.hasFLSINT32()) {
            setFLSINT32(other.getFLSINT32());
          }
          if (other.hasFLSINT64()) {
            setFLSINT64(other.getFLSINT64());
          }
          if (other.hasFLOAT()) {
            setFLOAT(other.getFLOAT());
          }
          if (other.hasDOUBLE()) {
            setDOUBLE(other.getDOUBLE());
          }
          if (other.hasSTRING()) {
            bitField0_ |= 0x00000040;
            sTRING_ = other.sTRING_;
            onChanged();
          }
          if (other.hasBYTES()) {
            setBYTES(other.getBYTES());
          }
          if (!other.vLSINT32A_.isEmpty()) {
            if (vLSINT32A_.isEmpty()) {
              vLSINT32A_ = other.vLSINT32A_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureVLSINT32AIsMutable();
              vLSINT32A_.addAll(other.vLSINT32A_);
            }
            onChanged();
          }
          if (!other.vLSINT64A_.isEmpty()) {
            if (vLSINT64A_.isEmpty()) {
              vLSINT64A_ = other.vLSINT64A_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureVLSINT64AIsMutable();
              vLSINT64A_.addAll(other.vLSINT64A_);
            }
            onChanged();
          }
          if (!other.fLSINT32A_.isEmpty()) {
            if (fLSINT32A_.isEmpty()) {
              fLSINT32A_ = other.fLSINT32A_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureFLSINT32AIsMutable();
              fLSINT32A_.addAll(other.fLSINT32A_);
            }
            onChanged();
          }
          if (!other.fLSINT64A_.isEmpty()) {
            if (fLSINT64A_.isEmpty()) {
              fLSINT64A_ = other.fLSINT64A_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureFLSINT64AIsMutable();
              fLSINT64A_.addAll(other.fLSINT64A_);
            }
            onChanged();
          }
          if (!other.fLOATA_.isEmpty()) {
            if (fLOATA_.isEmpty()) {
              fLOATA_ = other.fLOATA_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureFLOATAIsMutable();
              fLOATA_.addAll(other.fLOATA_);
            }
            onChanged();
          }
          if (!other.dOUBLEA_.isEmpty()) {
            if (dOUBLEA_.isEmpty()) {
              dOUBLEA_ = other.dOUBLEA_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureDOUBLEAIsMutable();
              dOUBLEA_.addAll(other.dOUBLEA_);
            }
            onChanged();
          }
          if (!other.sTRINGA_.isEmpty()) {
            if (sTRINGA_.isEmpty()) {
              sTRINGA_ = other.sTRINGA_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureSTRINGAIsMutable();
              sTRINGA_.addAll(other.sTRINGA_);
            }
            onChanged();
          }
          if (!other.bYTESA_.isEmpty()) {
            if (bYTESA_.isEmpty()) {
              bYTESA_ = other.bYTESA_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureBYTESAIsMutable();
              bYTESA_.addAll(other.bYTESA_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xMsgD.xMsgData.Data parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xMsgD.xMsgData.Data) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional sint32 VLSINT32 = 1;
        private int vLSINT32_ ;
        /**
         * <code>optional sint32 VLSINT32 = 1;</code>
         *
         * <pre>
         * variable length signed int32
         * </pre>
         */
        public boolean hasVLSINT32() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional sint32 VLSINT32 = 1;</code>
         *
         * <pre>
         * variable length signed int32
         * </pre>
         */
        public int getVLSINT32() {
          return vLSINT32_;
        }
        /**
         * <code>optional sint32 VLSINT32 = 1;</code>
         *
         * <pre>
         * variable length signed int32
         * </pre>
         */
        public Builder setVLSINT32(int value) {
          bitField0_ |= 0x00000001;
          vLSINT32_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint32 VLSINT32 = 1;</code>
         *
         * <pre>
         * variable length signed int32
         * </pre>
         */
        public Builder clearVLSINT32() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vLSINT32_ = 0;
          onChanged();
          return this;
        }

        // optional sint64 VLSINT64 = 2;
        private long vLSINT64_ ;
        /**
         * <code>optional sint64 VLSINT64 = 2;</code>
         *
         * <pre>
         * variable length signed int64
         * </pre>
         */
        public boolean hasVLSINT64() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional sint64 VLSINT64 = 2;</code>
         *
         * <pre>
         * variable length signed int64
         * </pre>
         */
        public long getVLSINT64() {
          return vLSINT64_;
        }
        /**
         * <code>optional sint64 VLSINT64 = 2;</code>
         *
         * <pre>
         * variable length signed int64
         * </pre>
         */
        public Builder setVLSINT64(long value) {
          bitField0_ |= 0x00000002;
          vLSINT64_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 VLSINT64 = 2;</code>
         *
         * <pre>
         * variable length signed int64
         * </pre>
         */
        public Builder clearVLSINT64() {
          bitField0_ = (bitField0_ & ~0x00000002);
          vLSINT64_ = 0L;
          onChanged();
          return this;
        }

        // optional sfixed32 FLSINT32 = 3;
        private int fLSINT32_ ;
        /**
         * <code>optional sfixed32 FLSINT32 = 3;</code>
         *
         * <pre>
         * fixed length signed int32
         * </pre>
         */
        public boolean hasFLSINT32() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional sfixed32 FLSINT32 = 3;</code>
         *
         * <pre>
         * fixed length signed int32
         * </pre>
         */
        public int getFLSINT32() {
          return fLSINT32_;
        }
        /**
         * <code>optional sfixed32 FLSINT32 = 3;</code>
         *
         * <pre>
         * fixed length signed int32
         * </pre>
         */
        public Builder setFLSINT32(int value) {
          bitField0_ |= 0x00000004;
          fLSINT32_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sfixed32 FLSINT32 = 3;</code>
         *
         * <pre>
         * fixed length signed int32
         * </pre>
         */
        public Builder clearFLSINT32() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fLSINT32_ = 0;
          onChanged();
          return this;
        }

        // optional sfixed64 FLSINT64 = 4;
        private long fLSINT64_ ;
        /**
         * <code>optional sfixed64 FLSINT64 = 4;</code>
         *
         * <pre>
         * fixed length signed int64
         * </pre>
         */
        public boolean hasFLSINT64() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional sfixed64 FLSINT64 = 4;</code>
         *
         * <pre>
         * fixed length signed int64
         * </pre>
         */
        public long getFLSINT64() {
          return fLSINT64_;
        }
        /**
         * <code>optional sfixed64 FLSINT64 = 4;</code>
         *
         * <pre>
         * fixed length signed int64
         * </pre>
         */
        public Builder setFLSINT64(long value) {
          bitField0_ |= 0x00000008;
          fLSINT64_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sfixed64 FLSINT64 = 4;</code>
         *
         * <pre>
         * fixed length signed int64
         * </pre>
         */
        public Builder clearFLSINT64() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fLSINT64_ = 0L;
          onChanged();
          return this;
        }

        // optional float FLOAT = 5;
        private float fLOAT_ ;
        /**
         * <code>optional float FLOAT = 5;</code>
         */
        public boolean hasFLOAT() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float FLOAT = 5;</code>
         */
        public float getFLOAT() {
          return fLOAT_;
        }
        /**
         * <code>optional float FLOAT = 5;</code>
         */
        public Builder setFLOAT(float value) {
          bitField0_ |= 0x00000010;
          fLOAT_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float FLOAT = 5;</code>
         */
        public Builder clearFLOAT() {
          bitField0_ = (bitField0_ & ~0x00000010);
          fLOAT_ = 0F;
          onChanged();
          return this;
        }

        // optional double DOUBLE = 6;
        private double dOUBLE_ ;
        /**
         * <code>optional double DOUBLE = 6;</code>
         */
        public boolean hasDOUBLE() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional double DOUBLE = 6;</code>
         */
        public double getDOUBLE() {
          return dOUBLE_;
        }
        /**
         * <code>optional double DOUBLE = 6;</code>
         */
        public Builder setDOUBLE(double value) {
          bitField0_ |= 0x00000020;
          dOUBLE_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double DOUBLE = 6;</code>
         */
        public Builder clearDOUBLE() {
          bitField0_ = (bitField0_ & ~0x00000020);
          dOUBLE_ = 0D;
          onChanged();
          return this;
        }

        // optional string STRING = 7;
        private java.lang.Object sTRING_ = "";
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public boolean hasSTRING() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public java.lang.String getSTRING() {
          java.lang.Object ref = sTRING_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            sTRING_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSTRINGBytes() {
          java.lang.Object ref = sTRING_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sTRING_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public Builder setSTRING(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          sTRING_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public Builder clearSTRING() {
          bitField0_ = (bitField0_ & ~0x00000040);
          sTRING_ = getDefaultInstance().getSTRING();
          onChanged();
          return this;
        }
        /**
         * <code>optional string STRING = 7;</code>
         *
         * <pre>
         * contains UTF-8 encoding or 7-bit ASCII text
         * </pre>
         */
        public Builder setSTRINGBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          sTRING_ = value;
          onChanged();
          return this;
        }

        // optional bytes BYTES = 8;
        private com.google.protobuf.ByteString bYTES_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes BYTES = 8;</code>
         *
         * <pre>
         * contains arbitrary sequence of bytes
         * </pre>
         */
        public boolean hasBYTES() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional bytes BYTES = 8;</code>
         *
         * <pre>
         * contains arbitrary sequence of bytes
         * </pre>
         */
        public com.google.protobuf.ByteString getBYTES() {
          return bYTES_;
        }
        /**
         * <code>optional bytes BYTES = 8;</code>
         *
         * <pre>
         * contains arbitrary sequence of bytes
         * </pre>
         */
        public Builder setBYTES(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          bYTES_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes BYTES = 8;</code>
         *
         * <pre>
         * contains arbitrary sequence of bytes
         * </pre>
         */
        public Builder clearBYTES() {
          bitField0_ = (bitField0_ & ~0x00000080);
          bYTES_ = getDefaultInstance().getBYTES();
          onChanged();
          return this;
        }

        // repeated sint32 VLSINT32A = 9;
        private java.util.List<java.lang.Integer> vLSINT32A_ = java.util.Collections.emptyList();
        private void ensureVLSINT32AIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            vLSINT32A_ = new java.util.ArrayList<java.lang.Integer>(vLSINT32A_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getVLSINT32AList() {
          return java.util.Collections.unmodifiableList(vLSINT32A_);
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public int getVLSINT32ACount() {
          return vLSINT32A_.size();
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public int getVLSINT32A(int index) {
          return vLSINT32A_.get(index);
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public Builder setVLSINT32A(
            int index, int value) {
          ensureVLSINT32AIsMutable();
          vLSINT32A_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public Builder addVLSINT32A(int value) {
          ensureVLSINT32AIsMutable();
          vLSINT32A_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public Builder addAllVLSINT32A(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureVLSINT32AIsMutable();
          super.addAll(values, vLSINT32A_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint32 VLSINT32A = 9;</code>
         *
         * <pre>
         * array of variable length signed int32s
         * </pre>
         */
        public Builder clearVLSINT32A() {
          vLSINT32A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        // repeated sint64 VLSINT64A = 10;
        private java.util.List<java.lang.Long> vLSINT64A_ = java.util.Collections.emptyList();
        private void ensureVLSINT64AIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            vLSINT64A_ = new java.util.ArrayList<java.lang.Long>(vLSINT64A_);
            bitField0_ |= 0x00000200;
           }
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getVLSINT64AList() {
          return java.util.Collections.unmodifiableList(vLSINT64A_);
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public int getVLSINT64ACount() {
          return vLSINT64A_.size();
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public long getVLSINT64A(int index) {
          return vLSINT64A_.get(index);
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public Builder setVLSINT64A(
            int index, long value) {
          ensureVLSINT64AIsMutable();
          vLSINT64A_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public Builder addVLSINT64A(long value) {
          ensureVLSINT64AIsMutable();
          vLSINT64A_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public Builder addAllVLSINT64A(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureVLSINT64AIsMutable();
          super.addAll(values, vLSINT64A_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sint64 VLSINT64A = 10;</code>
         *
         * <pre>
         * array of variable length signed int64s
         * </pre>
         */
        public Builder clearVLSINT64A() {
          vLSINT64A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }

        // repeated sfixed32 FLSINT32A = 11;
        private java.util.List<java.lang.Integer> fLSINT32A_ = java.util.Collections.emptyList();
        private void ensureFLSINT32AIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            fLSINT32A_ = new java.util.ArrayList<java.lang.Integer>(fLSINT32A_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getFLSINT32AList() {
          return java.util.Collections.unmodifiableList(fLSINT32A_);
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public int getFLSINT32ACount() {
          return fLSINT32A_.size();
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public int getFLSINT32A(int index) {
          return fLSINT32A_.get(index);
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public Builder setFLSINT32A(
            int index, int value) {
          ensureFLSINT32AIsMutable();
          fLSINT32A_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public Builder addFLSINT32A(int value) {
          ensureFLSINT32AIsMutable();
          fLSINT32A_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public Builder addAllFLSINT32A(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureFLSINT32AIsMutable();
          super.addAll(values, fLSINT32A_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed32 FLSINT32A = 11;</code>
         *
         * <pre>
         * array of fixed length signed int32s
         * </pre>
         */
        public Builder clearFLSINT32A() {
          fLSINT32A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }

        // repeated sfixed64 FLSINT64A = 12;
        private java.util.List<java.lang.Long> fLSINT64A_ = java.util.Collections.emptyList();
        private void ensureFLSINT64AIsMutable() {
          if (!((bitField0_ & 0x00000800) == 0x00000800)) {
            fLSINT64A_ = new java.util.ArrayList<java.lang.Long>(fLSINT64A_);
            bitField0_ |= 0x00000800;
           }
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public java.util.List<java.lang.Long>
            getFLSINT64AList() {
          return java.util.Collections.unmodifiableList(fLSINT64A_);
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public int getFLSINT64ACount() {
          return fLSINT64A_.size();
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public long getFLSINT64A(int index) {
          return fLSINT64A_.get(index);
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public Builder setFLSINT64A(
            int index, long value) {
          ensureFLSINT64AIsMutable();
          fLSINT64A_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public Builder addFLSINT64A(long value) {
          ensureFLSINT64AIsMutable();
          fLSINT64A_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public Builder addAllFLSINT64A(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureFLSINT64AIsMutable();
          super.addAll(values, fLSINT64A_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated sfixed64 FLSINT64A = 12;</code>
         *
         * <pre>
         * array of fixed length signed int64s
         * </pre>
         */
        public Builder clearFLSINT64A() {
          fLSINT64A_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
          return this;
        }

        // repeated float FLOATA = 13;
        private java.util.List<java.lang.Float> fLOATA_ = java.util.Collections.emptyList();
        private void ensureFLOATAIsMutable() {
          if (!((bitField0_ & 0x00001000) == 0x00001000)) {
            fLOATA_ = new java.util.ArrayList<java.lang.Float>(fLOATA_);
            bitField0_ |= 0x00001000;
           }
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public java.util.List<java.lang.Float>
            getFLOATAList() {
          return java.util.Collections.unmodifiableList(fLOATA_);
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public int getFLOATACount() {
          return fLOATA_.size();
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public float getFLOATA(int index) {
          return fLOATA_.get(index);
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public Builder setFLOATA(
            int index, float value) {
          ensureFLOATAIsMutable();
          fLOATA_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public Builder addFLOATA(float value) {
          ensureFLOATAIsMutable();
          fLOATA_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public Builder addAllFLOATA(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureFLOATAIsMutable();
          super.addAll(values, fLOATA_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float FLOATA = 13;</code>
         *
         * <pre>
         * array of floats
         * </pre>
         */
        public Builder clearFLOATA() {
          fLOATA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
          return this;
        }

        // repeated double DOUBLEA = 14;
        private java.util.List<java.lang.Double> dOUBLEA_ = java.util.Collections.emptyList();
        private void ensureDOUBLEAIsMutable() {
          if (!((bitField0_ & 0x00002000) == 0x00002000)) {
            dOUBLEA_ = new java.util.ArrayList<java.lang.Double>(dOUBLEA_);
            bitField0_ |= 0x00002000;
           }
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public java.util.List<java.lang.Double>
            getDOUBLEAList() {
          return java.util.Collections.unmodifiableList(dOUBLEA_);
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public int getDOUBLEACount() {
          return dOUBLEA_.size();
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public double getDOUBLEA(int index) {
          return dOUBLEA_.get(index);
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public Builder setDOUBLEA(
            int index, double value) {
          ensureDOUBLEAIsMutable();
          dOUBLEA_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public Builder addDOUBLEA(double value) {
          ensureDOUBLEAIsMutable();
          dOUBLEA_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public Builder addAllDOUBLEA(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureDOUBLEAIsMutable();
          super.addAll(values, dOUBLEA_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double DOUBLEA = 14;</code>
         *
         * <pre>
         * array of doubles
         * </pre>
         */
        public Builder clearDOUBLEA() {
          dOUBLEA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
          return this;
        }

        // repeated string STRINGA = 15;
        private com.google.protobuf.LazyStringList sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureSTRINGAIsMutable() {
          if (!((bitField0_ & 0x00004000) == 0x00004000)) {
            sTRINGA_ = new com.google.protobuf.LazyStringArrayList(sTRINGA_);
            bitField0_ |= 0x00004000;
           }
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public java.util.List<java.lang.String>
            getSTRINGAList() {
          return java.util.Collections.unmodifiableList(sTRINGA_);
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public int getSTRINGACount() {
          return sTRINGA_.size();
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public java.lang.String getSTRINGA(int index) {
          return sTRINGA_.get(index);
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public com.google.protobuf.ByteString
            getSTRINGABytes(int index) {
          return sTRINGA_.getByteString(index);
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public Builder setSTRINGA(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
          sTRINGA_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public Builder addSTRINGA(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
          sTRINGA_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public Builder addAllSTRINGA(
            java.lang.Iterable<java.lang.String> values) {
          ensureSTRINGAIsMutable();
          super.addAll(values, sTRINGA_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public Builder clearSTRINGA() {
          sTRINGA_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string STRINGA = 15;</code>
         *
         * <pre>
         * array of UTF-8 encoded or 7-bit ASCII strings
         * </pre>
         */
        public Builder addSTRINGABytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureSTRINGAIsMutable();
          sTRINGA_.add(value);
          onChanged();
          return this;
        }

        // repeated bytes BYTESA = 16;
        private java.util.List<com.google.protobuf.ByteString> bYTESA_ = java.util.Collections.emptyList();
        private void ensureBYTESAIsMutable() {
          if (!((bitField0_ & 0x00008000) == 0x00008000)) {
            bYTESA_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bYTESA_);
            bitField0_ |= 0x00008000;
           }
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public java.util.List<com.google.protobuf.ByteString>
            getBYTESAList() {
          return java.util.Collections.unmodifiableList(bYTESA_);
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public int getBYTESACount() {
          return bYTESA_.size();
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public com.google.protobuf.ByteString getBYTESA(int index) {
          return bYTESA_.get(index);
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public Builder setBYTESA(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBYTESAIsMutable();
          bYTESA_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public Builder addBYTESA(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBYTESAIsMutable();
          bYTESA_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public Builder addAllBYTESA(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureBYTESAIsMutable();
          super.addAll(values, bYTESA_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes BYTESA = 16;</code>
         *
         * <pre>
         * array of arbitrary sequence of bytes
         * </pre>
         */
        public Builder clearBYTESA() {
          bYTESA_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:xMsgData.Data)
      }

      static {
        defaultInstance = new Data(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:xMsgData.Data)
    }

    public interface PayloadOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required .xMsgData.DataType type = 2;
      /**
       * <code>required .xMsgData.DataType type = 2;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      boolean hasType();
      /**
       * <code>required .xMsgData.DataType type = 2;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      xMsgD.xMsgData.DataType getType();

      // required .xMsgData.Data data = 3;
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      boolean hasData();
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      xMsgD.xMsgData.Data getData();
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      xMsgD.xMsgData.DataOrBuilder getDataOrBuilder();

      // optional string byteOrder = 4;
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      boolean hasByteOrder();
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      java.lang.String getByteOrder();
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      com.google.protobuf.ByteString
          getByteOrderBytes();

      // optional string dataDescription = 5;
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      boolean hasDataDescription();
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      java.lang.String getDataDescription();
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      com.google.protobuf.ByteString
          getDataDescriptionBytes();
    }
    /**
     * Protobuf type {@code xMsgData.Payload}
     *
     * <pre>
     * Payload class
     * </pre>
     */
    public static final class Payload extends
        com.google.protobuf.GeneratedMessage
        implements PayloadOrBuilder {
      // Use Payload.newBuilder() to construct.
      private Payload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Payload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Payload defaultInstance;
      public static Payload getDefaultInstance() {
        return defaultInstance;
      }

      public Payload getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Payload(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                xMsgD.xMsgData.DataType value = xMsgD.xMsgData.DataType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  type_ = value;
                }
                break;
              }
              case 26: {
                xMsgD.xMsgData.Data.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = data_.toBuilder();
                }
                data_ = input.readMessage(xMsgD.xMsgData.Data.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(data_);
                  data_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                byteOrder_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                dataDescription_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgData_Payload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgData_Payload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgData.Payload.class, xMsgD.xMsgData.Payload.Builder.class);
      }

      public static com.google.protobuf.Parser<Payload> PARSER =
          new com.google.protobuf.AbstractParser<Payload>() {
        public Payload parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Payload(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Payload> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * payload name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required .xMsgData.DataType type = 2;
      public static final int TYPE_FIELD_NUMBER = 2;
      private xMsgD.xMsgData.DataType type_;
      /**
       * <code>required .xMsgData.DataType type = 2;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .xMsgData.DataType type = 2;</code>
       *
       * <pre>
       * payload data type
       * </pre>
       */
      public xMsgD.xMsgData.DataType getType() {
        return type_;
      }

      // required .xMsgData.Data data = 3;
      public static final int DATA_FIELD_NUMBER = 3;
      private xMsgD.xMsgData.Data data_;
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public xMsgD.xMsgData.Data getData() {
        return data_;
      }
      /**
       * <code>required .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public xMsgD.xMsgData.DataOrBuilder getDataOrBuilder() {
        return data_;
      }

      // optional string byteOrder = 4;
      public static final int BYTEORDER_FIELD_NUMBER = 4;
      private java.lang.Object byteOrder_;
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      public boolean hasByteOrder() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      public java.lang.String getByteOrder() {
        java.lang.Object ref = byteOrder_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            byteOrder_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string byteOrder = 4;</code>
       *
       * <pre>
       * byteorde in case data type is BTES/BYTESA
       * </pre>
       */
      public com.google.protobuf.ByteString
          getByteOrderBytes() {
        java.lang.Object ref = byteOrder_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          byteOrder_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string dataDescription = 5;
      public static final int DATADESCRIPTION_FIELD_NUMBER = 5;
      private java.lang.Object dataDescription_;
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      public boolean hasDataDescription() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      public java.lang.String getDataDescription() {
        java.lang.Object ref = dataDescription_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dataDescription_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string dataDescription = 5;</code>
       *
       * <pre>
       * data description
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDataDescriptionBytes() {
        java.lang.Object ref = dataDescription_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "";
        type_ = xMsgD.xMsgData.DataType.VLSINT32;
        data_ = xMsgD.xMsgData.Data.getDefaultInstance();
        byteOrder_ = "";
        dataDescription_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, data_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getByteOrderBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getDataDescriptionBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, data_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getByteOrderBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getDataDescriptionBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static xMsgD.xMsgData.Payload parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xMsgD.xMsgData.Payload parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xMsgD.xMsgData.Payload parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xMsgD.xMsgData.Payload parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xMsgD.xMsgData.Payload parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static xMsgD.xMsgData.Payload parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static xMsgD.xMsgData.Payload parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static xMsgD.xMsgData.Payload parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static xMsgD.xMsgData.Payload parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static xMsgD.xMsgData.Payload parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(xMsgD.xMsgData.Payload prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code xMsgData.Payload}
       *
       * <pre>
       * Payload class
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements xMsgD.xMsgData.PayloadOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xMsgD.internal_static_xMsgData_Payload_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xMsgD.internal_static_xMsgData_Payload_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xMsgD.xMsgData.Payload.class, xMsgD.xMsgData.Payload.Builder.class);
        }

        // Construct using xMsgD.xMsgData.Payload.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getDataFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = xMsgD.xMsgData.DataType.VLSINT32;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (dataBuilder_ == null) {
            data_ = xMsgD.xMsgData.Data.getDefaultInstance();
          } else {
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          byteOrder_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          dataDescription_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xMsgD.internal_static_xMsgData_Payload_descriptor;
        }

        public xMsgD.xMsgData.Payload getDefaultInstanceForType() {
          return xMsgD.xMsgData.Payload.getDefaultInstance();
        }

        public xMsgD.xMsgData.Payload build() {
          xMsgD.xMsgData.Payload result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public xMsgD.xMsgData.Payload buildPartial() {
          xMsgD.xMsgData.Payload result = new xMsgD.xMsgData.Payload(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (dataBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = dataBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.byteOrder_ = byteOrder_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.dataDescription_ = dataDescription_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xMsgD.xMsgData.Payload) {
            return mergeFrom((xMsgD.xMsgData.Payload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xMsgD.xMsgData.Payload other) {
          if (other == xMsgD.xMsgData.Payload.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasData()) {
            mergeData(other.getData());
          }
          if (other.hasByteOrder()) {
            bitField0_ |= 0x00000008;
            byteOrder_ = other.byteOrder_;
            onChanged();
          }
          if (other.hasDataDescription()) {
            bitField0_ |= 0x00000010;
            dataDescription_ = other.dataDescription_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasType()) {
            
            return false;
          }
          if (!hasData()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          xMsgD.xMsgData.Payload parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (xMsgD.xMsgData.Payload) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         * payload name
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required .xMsgData.DataType type = 2;
        private xMsgD.xMsgData.DataType type_ = xMsgD.xMsgData.DataType.VLSINT32;
        /**
         * <code>required .xMsgData.DataType type = 2;</code>
         *
         * <pre>
         * payload data type
         * </pre>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required .xMsgData.DataType type = 2;</code>
         *
         * <pre>
         * payload data type
         * </pre>
         */
        public xMsgD.xMsgData.DataType getType() {
          return type_;
        }
        /**
         * <code>required .xMsgData.DataType type = 2;</code>
         *
         * <pre>
         * payload data type
         * </pre>
         */
        public Builder setType(xMsgD.xMsgData.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .xMsgData.DataType type = 2;</code>
         *
         * <pre>
         * payload data type
         * </pre>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = xMsgD.xMsgData.DataType.VLSINT32;
          onChanged();
          return this;
        }

        // required .xMsgData.Data data = 3;
        private xMsgD.xMsgData.Data data_ = xMsgD.xMsgData.Data.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder> dataBuilder_;
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public xMsgD.xMsgData.Data getData() {
          if (dataBuilder_ == null) {
            return data_;
          } else {
            return dataBuilder_.getMessage();
          }
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public Builder setData(xMsgD.xMsgData.Data value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            data_ = value;
            onChanged();
          } else {
            dataBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public Builder setData(
            xMsgD.xMsgData.Data.Builder builderForValue) {
          if (dataBuilder_ == null) {
            data_ = builderForValue.build();
            onChanged();
          } else {
            dataBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public Builder mergeData(xMsgD.xMsgData.Data value) {
          if (dataBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                data_ != xMsgD.xMsgData.Data.getDefaultInstance()) {
              data_ =
                xMsgD.xMsgData.Data.newBuilder(data_).mergeFrom(value).buildPartial();
            } else {
              data_ = value;
            }
            onChanged();
          } else {
            dataBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public Builder clearData() {
          if (dataBuilder_ == null) {
            data_ = xMsgD.xMsgData.Data.getDefaultInstance();
            onChanged();
          } else {
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public xMsgD.xMsgData.Data.Builder getDataBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getDataFieldBuilder().getBuilder();
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        public xMsgD.xMsgData.DataOrBuilder getDataOrBuilder() {
          if (dataBuilder_ != null) {
            return dataBuilder_.getMessageOrBuilder();
          } else {
            return data_;
          }
        }
        /**
         * <code>required .xMsgData.Data data = 3;</code>
         *
         * <pre>
         * data itself
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder> 
            getDataFieldBuilder() {
          if (dataBuilder_ == null) {
            dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder>(
                    data_,
                    getParentForChildren(),
                    isClean());
            data_ = null;
          }
          return dataBuilder_;
        }

        // optional string byteOrder = 4;
        private java.lang.Object byteOrder_ = "";
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public boolean hasByteOrder() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public java.lang.String getByteOrder() {
          java.lang.Object ref = byteOrder_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            byteOrder_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public com.google.protobuf.ByteString
            getByteOrderBytes() {
          java.lang.Object ref = byteOrder_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            byteOrder_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public Builder setByteOrder(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          byteOrder_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public Builder clearByteOrder() {
          bitField0_ = (bitField0_ & ~0x00000008);
          byteOrder_ = getDefaultInstance().getByteOrder();
          onChanged();
          return this;
        }
        /**
         * <code>optional string byteOrder = 4;</code>
         *
         * <pre>
         * byteorde in case data type is BTES/BYTESA
         * </pre>
         */
        public Builder setByteOrderBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          byteOrder_ = value;
          onChanged();
          return this;
        }

        // optional string dataDescription = 5;
        private java.lang.Object dataDescription_ = "";
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public boolean hasDataDescription() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public java.lang.String getDataDescription() {
          java.lang.Object ref = dataDescription_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            dataDescription_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDataDescriptionBytes() {
          java.lang.Object ref = dataDescription_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataDescription_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public Builder setDataDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          dataDescription_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public Builder clearDataDescription() {
          bitField0_ = (bitField0_ & ~0x00000010);
          dataDescription_ = getDefaultInstance().getDataDescription();
          onChanged();
          return this;
        }
        /**
         * <code>optional string dataDescription = 5;</code>
         *
         * <pre>
         * data description
         * </pre>
         */
        public Builder setDataDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          dataDescription_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:xMsgData.Payload)
      }

      static {
        defaultInstance = new Payload(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:xMsgData.Payload)
    }

    private int bitField0_;
    // optional fixed32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional fixed32 id = 1;</code>
     *
     * <pre>
     * communication id, used to gnetically relate messages
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 id = 1;</code>
     *
     * <pre>
     * communication id, used to gnetically relate messages
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional string authour = 2;
    public static final int AUTHOUR_FIELD_NUMBER = 2;
    private java.lang.Object authour_;
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    public boolean hasAuthour() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    public java.lang.String getAuthour() {
      java.lang.Object ref = authour_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          authour_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string authour = 2;</code>
     *
     * <pre>
     * author of the data
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthourBytes() {
      java.lang.Object ref = authour_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authour_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .xMsgData.Data data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private xMsgD.xMsgData.Data data_;
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    public xMsgD.xMsgData.Data getData() {
      return data_;
    }
    /**
     * <code>optional .xMsgData.Data data = 3;</code>
     *
     * <pre>
     * data itself
     * </pre>
     */
    public xMsgD.xMsgData.DataOrBuilder getDataOrBuilder() {
      return data_;
    }

    // optional .xMsgData.DataType type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private xMsgD.xMsgData.DataType type_;
    /**
     * <code>optional .xMsgData.DataType type = 4;</code>
     *
     * <pre>
     *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
     * filed, otherwise "data" filed
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .xMsgData.DataType type = 4;</code>
     *
     * <pre>
     *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
     * filed, otherwise "data" filed
     * </pre>
     */
    public xMsgD.xMsgData.DataType getType() {
      return type_;
    }

    // optional string byteOrder = 5;
    public static final int BYTEORDER_FIELD_NUMBER = 5;
    private java.lang.Object byteOrder_;
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    public boolean hasByteOrder() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    public java.lang.String getByteOrder() {
      java.lang.Object ref = byteOrder_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          byteOrder_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string byteOrder = 5;</code>
     *
     * <pre>
     * byte ordering in case data type is BYTES/BYTESA
     * </pre>
     */
    public com.google.protobuf.ByteString
        getByteOrderBytes() {
      java.lang.Object ref = byteOrder_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        byteOrder_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string dataDescription = 6;
    public static final int DATADESCRIPTION_FIELD_NUMBER = 6;
    private java.lang.Object dataDescription_;
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    public boolean hasDataDescription() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    public java.lang.String getDataDescription() {
      java.lang.Object ref = dataDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dataDescription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dataDescription = 6;</code>
     *
     * <pre>
     * data textual description
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDataDescriptionBytes() {
      java.lang.Object ref = dataDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .xMsgData.Payload payload = 7;
    public static final int PAYLOAD_FIELD_NUMBER = 7;
    private java.util.List<xMsgD.xMsgData.Payload> payload_;
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    public java.util.List<xMsgD.xMsgData.Payload> getPayloadList() {
      return payload_;
    }
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    public java.util.List<? extends xMsgD.xMsgData.PayloadOrBuilder> 
        getPayloadOrBuilderList() {
      return payload_;
    }
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    public int getPayloadCount() {
      return payload_.size();
    }
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    public xMsgD.xMsgData.Payload getPayload(int index) {
      return payload_.get(index);
    }
    /**
     * <code>repeated .xMsgData.Payload payload = 7;</code>
     *
     * <pre>
     * data within the payload
     * </pre>
     */
    public xMsgD.xMsgData.PayloadOrBuilder getPayloadOrBuilder(
        int index) {
      return payload_.get(index);
    }

    private void initFields() {
      id_ = 0;
      authour_ = "";
      data_ = xMsgD.xMsgData.Data.getDefaultInstance();
      type_ = xMsgD.xMsgData.DataType.VLSINT32;
      byteOrder_ = "";
      dataDescription_ = "";
      payload_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPayloadCount(); i++) {
        if (!getPayload(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAuthourBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getByteOrderBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getDataDescriptionBytes());
      }
      for (int i = 0; i < payload_.size(); i++) {
        output.writeMessage(7, payload_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAuthourBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, data_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getByteOrderBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getDataDescriptionBytes());
      }
      for (int i = 0; i < payload_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, payload_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xMsgD.xMsgData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xMsgD.xMsgData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xMsgD.xMsgData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static xMsgD.xMsgData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static xMsgD.xMsgData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static xMsgD.xMsgData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static xMsgD.xMsgData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(xMsgD.xMsgData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xMsgData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements xMsgD.xMsgDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xMsgD.internal_static_xMsgData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xMsgD.internal_static_xMsgData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xMsgD.xMsgData.class, xMsgD.xMsgData.Builder.class);
      }

      // Construct using xMsgD.xMsgData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
          getPayloadFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        authour_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dataBuilder_ == null) {
          data_ = xMsgD.xMsgData.Data.getDefaultInstance();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = xMsgD.xMsgData.DataType.VLSINT32;
        bitField0_ = (bitField0_ & ~0x00000008);
        byteOrder_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        dataDescription_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (payloadBuilder_ == null) {
          payload_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          payloadBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xMsgD.internal_static_xMsgData_descriptor;
      }

      public xMsgD.xMsgData getDefaultInstanceForType() {
        return xMsgD.xMsgData.getDefaultInstance();
      }

      public xMsgD.xMsgData build() {
        xMsgD.xMsgData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xMsgD.xMsgData buildPartial() {
        xMsgD.xMsgData result = new xMsgD.xMsgData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authour_ = authour_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.byteOrder_ = byteOrder_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dataDescription_ = dataDescription_;
        if (payloadBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            payload_ = java.util.Collections.unmodifiableList(payload_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.payload_ = payload_;
        } else {
          result.payload_ = payloadBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xMsgD.xMsgData) {
          return mergeFrom((xMsgD.xMsgData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xMsgD.xMsgData other) {
        if (other == xMsgD.xMsgData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasAuthour()) {
          bitField0_ |= 0x00000002;
          authour_ = other.authour_;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasByteOrder()) {
          bitField0_ |= 0x00000010;
          byteOrder_ = other.byteOrder_;
          onChanged();
        }
        if (other.hasDataDescription()) {
          bitField0_ |= 0x00000020;
          dataDescription_ = other.dataDescription_;
          onChanged();
        }
        if (payloadBuilder_ == null) {
          if (!other.payload_.isEmpty()) {
            if (payload_.isEmpty()) {
              payload_ = other.payload_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePayloadIsMutable();
              payload_.addAll(other.payload_);
            }
            onChanged();
          }
        } else {
          if (!other.payload_.isEmpty()) {
            if (payloadBuilder_.isEmpty()) {
              payloadBuilder_.dispose();
              payloadBuilder_ = null;
              payload_ = other.payload_;
              bitField0_ = (bitField0_ & ~0x00000040);
              payloadBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPayloadFieldBuilder() : null;
            } else {
              payloadBuilder_.addAllMessages(other.payload_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPayloadCount(); i++) {
          if (!getPayload(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xMsgD.xMsgData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xMsgD.xMsgData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional fixed32 id = 1;
      private int id_ ;
      /**
       * <code>optional fixed32 id = 1;</code>
       *
       * <pre>
       * communication id, used to gnetically relate messages
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 id = 1;</code>
       *
       * <pre>
       * communication id, used to gnetically relate messages
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional fixed32 id = 1;</code>
       *
       * <pre>
       * communication id, used to gnetically relate messages
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 id = 1;</code>
       *
       * <pre>
       * communication id, used to gnetically relate messages
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string authour = 2;
      private java.lang.Object authour_ = "";
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public boolean hasAuthour() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public java.lang.String getAuthour() {
        java.lang.Object ref = authour_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          authour_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAuthourBytes() {
        java.lang.Object ref = authour_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authour_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public Builder setAuthour(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        authour_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public Builder clearAuthour() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authour_ = getDefaultInstance().getAuthour();
        onChanged();
        return this;
      }
      /**
       * <code>optional string authour = 2;</code>
       *
       * <pre>
       * author of the data
       * </pre>
       */
      public Builder setAuthourBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        authour_ = value;
        onChanged();
        return this;
      }

      // optional .xMsgData.Data data = 3;
      private xMsgD.xMsgData.Data data_ = xMsgD.xMsgData.Data.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder> dataBuilder_;
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public xMsgD.xMsgData.Data getData() {
        if (dataBuilder_ == null) {
          return data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public Builder setData(xMsgD.xMsgData.Data value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public Builder setData(
          xMsgD.xMsgData.Data.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public Builder mergeData(xMsgD.xMsgData.Data value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              data_ != xMsgD.xMsgData.Data.getDefaultInstance()) {
            data_ =
              xMsgD.xMsgData.Data.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = xMsgD.xMsgData.Data.getDefaultInstance();
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public xMsgD.xMsgData.Data.Builder getDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      public xMsgD.xMsgData.DataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_;
        }
      }
      /**
       * <code>optional .xMsgData.Data data = 3;</code>
       *
       * <pre>
       * data itself
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              xMsgD.xMsgData.Data, xMsgD.xMsgData.Data.Builder, xMsgD.xMsgData.DataOrBuilder>(
                  data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // optional .xMsgData.DataType type = 4;
      private xMsgD.xMsgData.DataType type_ = xMsgD.xMsgData.DataType.VLSINT32;
      /**
       * <code>optional .xMsgData.DataType type = 4;</code>
       *
       * <pre>
       *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
       * filed, otherwise "data" filed
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .xMsgData.DataType type = 4;</code>
       *
       * <pre>
       *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
       * filed, otherwise "data" filed
       * </pre>
       */
      public xMsgD.xMsgData.DataType getType() {
        return type_;
      }
      /**
       * <code>optional .xMsgData.DataType type = 4;</code>
       *
       * <pre>
       *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
       * filed, otherwise "data" filed
       * </pre>
       */
      public Builder setType(xMsgD.xMsgData.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .xMsgData.DataType type = 4;</code>
       *
       * <pre>
       *data type. If set to DataTpe.PAYLOAD access data useing the "payload"
       * filed, otherwise "data" filed
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = xMsgD.xMsgData.DataType.VLSINT32;
        onChanged();
        return this;
      }

      // optional string byteOrder = 5;
      private java.lang.Object byteOrder_ = "";
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public boolean hasByteOrder() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public java.lang.String getByteOrder() {
        java.lang.Object ref = byteOrder_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          byteOrder_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public com.google.protobuf.ByteString
          getByteOrderBytes() {
        java.lang.Object ref = byteOrder_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          byteOrder_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public Builder setByteOrder(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        byteOrder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public Builder clearByteOrder() {
        bitField0_ = (bitField0_ & ~0x00000010);
        byteOrder_ = getDefaultInstance().getByteOrder();
        onChanged();
        return this;
      }
      /**
       * <code>optional string byteOrder = 5;</code>
       *
       * <pre>
       * byte ordering in case data type is BYTES/BYTESA
       * </pre>
       */
      public Builder setByteOrderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        byteOrder_ = value;
        onChanged();
        return this;
      }

      // optional string dataDescription = 6;
      private java.lang.Object dataDescription_ = "";
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public boolean hasDataDescription() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public java.lang.String getDataDescription() {
        java.lang.Object ref = dataDescription_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dataDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDataDescriptionBytes() {
        java.lang.Object ref = dataDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public Builder setDataDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        dataDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public Builder clearDataDescription() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dataDescription_ = getDefaultInstance().getDataDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataDescription = 6;</code>
       *
       * <pre>
       * data textual description
       * </pre>
       */
      public Builder setDataDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        dataDescription_ = value;
        onChanged();
        return this;
      }

      // repeated .xMsgData.Payload payload = 7;
      private java.util.List<xMsgD.xMsgData.Payload> payload_ =
        java.util.Collections.emptyList();
      private void ensurePayloadIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          payload_ = new java.util.ArrayList<xMsgD.xMsgData.Payload>(payload_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          xMsgD.xMsgData.Payload, xMsgD.xMsgData.Payload.Builder, xMsgD.xMsgData.PayloadOrBuilder> payloadBuilder_;

      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public java.util.List<xMsgD.xMsgData.Payload> getPayloadList() {
        if (payloadBuilder_ == null) {
          return java.util.Collections.unmodifiableList(payload_);
        } else {
          return payloadBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public int getPayloadCount() {
        if (payloadBuilder_ == null) {
          return payload_.size();
        } else {
          return payloadBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public xMsgD.xMsgData.Payload getPayload(int index) {
        if (payloadBuilder_ == null) {
          return payload_.get(index);
        } else {
          return payloadBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder setPayload(
          int index, xMsgD.xMsgData.Payload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayloadIsMutable();
          payload_.set(index, value);
          onChanged();
        } else {
          payloadBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder setPayload(
          int index, xMsgD.xMsgData.Payload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          ensurePayloadIsMutable();
          payload_.set(index, builderForValue.build());
          onChanged();
        } else {
          payloadBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder addPayload(xMsgD.xMsgData.Payload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayloadIsMutable();
          payload_.add(value);
          onChanged();
        } else {
          payloadBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder addPayload(
          int index, xMsgD.xMsgData.Payload value) {
        if (payloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePayloadIsMutable();
          payload_.add(index, value);
          onChanged();
        } else {
          payloadBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder addPayload(
          xMsgD.xMsgData.Payload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          ensurePayloadIsMutable();
          payload_.add(builderForValue.build());
          onChanged();
        } else {
          payloadBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder addPayload(
          int index, xMsgD.xMsgData.Payload.Builder builderForValue) {
        if (payloadBuilder_ == null) {
          ensurePayloadIsMutable();
          payload_.add(index, builderForValue.build());
          onChanged();
        } else {
          payloadBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder addAllPayload(
          java.lang.Iterable<? extends xMsgD.xMsgData.Payload> values) {
        if (payloadBuilder_ == null) {
          ensurePayloadIsMutable();
          super.addAll(values, payload_);
          onChanged();
        } else {
          payloadBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder clearPayload() {
        if (payloadBuilder_ == null) {
          payload_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          payloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public Builder removePayload(int index) {
        if (payloadBuilder_ == null) {
          ensurePayloadIsMutable();
          payload_.remove(index);
          onChanged();
        } else {
          payloadBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public xMsgD.xMsgData.Payload.Builder getPayloadBuilder(
          int index) {
        return getPayloadFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public xMsgD.xMsgData.PayloadOrBuilder getPayloadOrBuilder(
          int index) {
        if (payloadBuilder_ == null) {
          return payload_.get(index);  } else {
          return payloadBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public java.util.List<? extends xMsgD.xMsgData.PayloadOrBuilder> 
           getPayloadOrBuilderList() {
        if (payloadBuilder_ != null) {
          return payloadBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(payload_);
        }
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public xMsgD.xMsgData.Payload.Builder addPayloadBuilder() {
        return getPayloadFieldBuilder().addBuilder(
            xMsgD.xMsgData.Payload.getDefaultInstance());
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public xMsgD.xMsgData.Payload.Builder addPayloadBuilder(
          int index) {
        return getPayloadFieldBuilder().addBuilder(
            index, xMsgD.xMsgData.Payload.getDefaultInstance());
      }
      /**
       * <code>repeated .xMsgData.Payload payload = 7;</code>
       *
       * <pre>
       * data within the payload
       * </pre>
       */
      public java.util.List<xMsgD.xMsgData.Payload.Builder> 
           getPayloadBuilderList() {
        return getPayloadFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          xMsgD.xMsgData.Payload, xMsgD.xMsgData.Payload.Builder, xMsgD.xMsgData.PayloadOrBuilder> 
          getPayloadFieldBuilder() {
        if (payloadBuilder_ == null) {
          payloadBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              xMsgD.xMsgData.Payload, xMsgD.xMsgData.Payload.Builder, xMsgD.xMsgData.PayloadOrBuilder>(
                  payload_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        return payloadBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:xMsgData)
    }

    static {
      defaultInstance = new xMsgData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:xMsgData)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgData_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgData_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_xMsgData_Payload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_xMsgData_Payload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016xMsgData.proto\"\310\006\n\010xMsgData\022\n\n\002id\030\001 \001(" +
      "\007\022\017\n\007authour\030\002 \001(\t\022\034\n\004data\030\003 \001(\0132\016.xMsgD" +
      "ata.Data\022 \n\004type\030\004 \001(\0162\022.xMsgData.DataTy" +
      "pe\022\021\n\tbyteOrder\030\005 \001(\t\022\027\n\017dataDescription" +
      "\030\006 \001(\t\022\"\n\007payload\030\007 \003(\0132\021.xMsgData.Paylo" +
      "ad\032\232\002\n\004Data\022\020\n\010VLSINT32\030\001 \001(\021\022\020\n\010VLSINT6" +
      "4\030\002 \001(\022\022\020\n\010FLSINT32\030\003 \001(\017\022\020\n\010FLSINT64\030\004 " +
      "\001(\020\022\r\n\005FLOAT\030\005 \001(\002\022\016\n\006DOUBLE\030\006 \001(\001\022\016\n\006ST" +
      "RING\030\007 \001(\t\022\r\n\005BYTES\030\010 \001(\014\022\021\n\tVLSINT32A\030\t" +
      " \003(\021\022\021\n\tVLSINT64A\030\n \003(\022\022\021\n\tFLSINT32A\030\013 \003",
      "(\017\022\021\n\tFLSINT64A\030\014 \003(\020\022\016\n\006FLOATA\030\r \003(\002\022\017\n" +
      "\007DOUBLEA\030\016 \003(\001\022\017\n\007STRINGA\030\017 \003(\t\022\016\n\006BYTES" +
      "A\030\020 \003(\014\032\203\001\n\007Payload\022\014\n\004name\030\001 \002(\t\022 \n\004typ" +
      "e\030\002 \002(\0162\022.xMsgData.DataType\022\034\n\004data\030\003 \002(" +
      "\0132\016.xMsgData.Data\022\021\n\tbyteOrder\030\004 \001(\t\022\027\n\017" +
      "dataDescription\030\005 \001(\t\"\353\001\n\010DataType\022\014\n\010VL" +
      "SINT32\020\001\022\014\n\010VLSINT64\020\002\022\014\n\010FLSINT32\020\003\022\014\n\010" +
      "FLSINT64\020\004\022\t\n\005FLOAT\020\005\022\n\n\006DOUBLE\020\006\022\n\n\006STR" +
      "ING\020\007\022\t\n\005BYTES\020\010\022\r\n\tVLSINT32A\020\t\022\r\n\tVLSIN" +
      "T64A\020\n\022\r\n\tFLSINT32A\020\013\022\r\n\tFLSINT64A\020\014\022\n\n\006",
      "FLOATA\020\r\022\013\n\007DOUBLEA\020\016\022\013\n\007STRINGA\020\017\022\n\n\006BY" +
      "TESA\020\020\022\013\n\007PAYLOAD\020\021B\tB\005xMsgDH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_xMsgData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_xMsgData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgData_descriptor,
              new java.lang.String[] { "Id", "Authour", "Data", "Type", "ByteOrder", "DataDescription", "Payload", });
          internal_static_xMsgData_Data_descriptor =
            internal_static_xMsgData_descriptor.getNestedTypes().get(0);
          internal_static_xMsgData_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgData_Data_descriptor,
              new java.lang.String[] { "VLSINT32", "VLSINT64", "FLSINT32", "FLSINT64", "FLOAT", "DOUBLE", "STRING", "BYTES", "VLSINT32A", "VLSINT64A", "FLSINT32A", "FLSINT64A", "FLOATA", "DOUBLEA", "STRINGA", "BYTESA", });
          internal_static_xMsgData_Payload_descriptor =
            internal_static_xMsgData_descriptor.getNestedTypes().get(1);
          internal_static_xMsgData_Payload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_xMsgData_Payload_descriptor,
              new java.lang.String[] { "Name", "Type", "Data", "ByteOrder", "DataDescription", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
